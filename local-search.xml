<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python学习笔记（学习中...）</title>
    <link href="/2021/01/19/PythonLearning/"/>
    <url>/2021/01/19/PythonLearning/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Python 也算是之前基础入门了很久了，但是之前的学习的时候从来没写过笔记，就看着视频敲着代码，然后就是一顿简单的爬虫实战，成为了脚本小子，很多Python内置的基础模块还不是很熟悉，基础语法也有些模糊，趁着这个时间抓紧复习一下，冲冲冲</p><a id="more"></a></blockquote><div class="note note-primary">            <p>Flag：争取每天学个两三个小时，写写博客</p>          </div><h2 id="学习环境"><a href="#学习环境" class="headerlink" title="学习环境"></a>学习环境</h2><ol><li><a href="https://www.python.org/downloads/release/python-379/">Python 3.7.9</a></li><li><a href="https://www.jetbrains.com/pycharm/download/other.html">PyCharm Professional Edition 2020.3.2</a></li><li><a href="https://www.ghpym.com/ideapatch.html">JetBrains 2020.3 通杀补丁（学习用，有能力请支持正版）</a></li><li><a href="https://www.bilibili.com/video/BV1kV411h7fD">老男孩 2020 年 Python 32 期</a></li></ol><h2 id="Python-语法"><a href="#Python-语法" class="headerlink" title="Python 语法"></a>Python 语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 单行注释</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">多行注释1</span><br><span class="hljs-string">多行注释2</span><br><span class="hljs-string">多行注释3</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">多行注释1</span><br><span class="hljs-string">多行注释2</span><br><span class="hljs-string">多行注释3</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>可改变的量为变量，指向内存的一块空间，当不使用时即会被回收</li><li>变量名只能由数字、字母和下划线组成，不能用关键字，不能数字开头，建议不要用中文</li><li>变量名尽量见名知意</li><li>Python 中常量，一般通过全部大写字母来约定俗成</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 查询关键字</span><br><span class="hljs-keyword">import</span> keyword<br>print(keyword.kwlist)<br><br><span class="hljs-comment"># 变量的交换</span><br>a = <span class="hljs-number">10</span><br>b = <span class="hljs-number">19</span><br>a, b = b, a<br>print(a)  <span class="hljs-comment"># 19</span><br>print(b)  <span class="hljs-comment"># 10</span><br></code></pre></td></tr></table></figure><h3 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h3><ul><li>True：除了 False 都是 True</li><li>False：0、0.0、0j、’’、[]、()、set()、{}、None</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># bool()，强制将其他类型转为bool</span><br>print(bool(<span class="hljs-number">10</span>))  <span class="hljs-comment"># True</span><br>print(bool(<span class="hljs-number">0</span>))  <span class="hljs-comment"># False</span><br>print(bool(<span class="hljs-number">0.0</span>))  <span class="hljs-comment"># False</span><br>print(bool(<span class="hljs-string">&#x27;0&#x27;</span>))  <span class="hljs-comment"># True</span><br>print(bool(<span class="hljs-string">&#x27;&#x27;</span>))  <span class="hljs-comment"># False</span><br>print(bool(&#123;&#125;))  <span class="hljs-comment"># False</span><br>print(bool([]))  <span class="hljs-comment"># False</span><br>print(bool(set()))  <span class="hljs-comment"># False</span><br>print(bool(<span class="hljs-number">0j</span>))  <span class="hljs-comment"># False</span><br>print(bool(<span class="hljs-literal">None</span>))  <span class="hljs-comment"># False</span><br></code></pre></td></tr></table></figure><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><ul><li>int 整型，二进制，八进制，十进制，十六进制</li><li>float 浮点型，小数</li><li>conplex 复数，实部+虚部</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># type()，获取变量的类型</span><br><span class="hljs-comment"># id()，获取变量内存地址</span><br><br>a = <span class="hljs-number">0b11</span><br>print(a, type(a))  <span class="hljs-comment"># 3 &lt;class &#x27;int&#x27;&gt;</span><br>b = <span class="hljs-number">0o11</span><br>print(b, type(b))  <span class="hljs-comment"># 9 &lt;class &#x27;int&#x27;&gt;</span><br>c = <span class="hljs-number">0x11</span><br>print(c, type(c))  <span class="hljs-comment"># 17 &lt;class &#x27;int&#x27;&gt;</span><br>d = <span class="hljs-number">1.1</span><br>print(d, type(d))  <span class="hljs-comment"># 1.1 &lt;class &#x27;float&#x27;&gt;</span><br>e = <span class="hljs-number">2e2</span><br>print(e, type(e))  <span class="hljs-comment"># 200.0 &lt;class &#x27;float&#x27;&gt;</span><br>f = <span class="hljs-number">1</span> + <span class="hljs-number">2j</span><br>print(f, type(f))  <span class="hljs-comment"># (1+2j) &lt;class &#x27;complex&#x27;&gt;</span><br>g = complex(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>print(g, type(g))  <span class="hljs-comment"># (2+3j) &lt;class &#x27;complex&#x27;&gt;</span><br>h = <span class="hljs-literal">True</span><br>print(h, type(h))  <span class="hljs-comment"># True &lt;class &#x27;bool&#x27;&gt;</span><br>i = <span class="hljs-literal">False</span><br>print(i, type(i))  <span class="hljs-comment"># False &lt;class &#x27;bool&#x27;&gt;</span><br></code></pre></td></tr></table></figure><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># int()，强制将int、float、bool、纯数字字符串转为int</span><br>print(int(<span class="hljs-number">10</span>))  <span class="hljs-comment"># 10</span><br>print(int(<span class="hljs-number">10.66</span>))  <span class="hljs-comment"># 10</span><br>print(int(<span class="hljs-literal">True</span>))  <span class="hljs-comment"># 1</span><br>print(int(<span class="hljs-literal">False</span>))  <span class="hljs-comment"># 0</span><br>print(int(<span class="hljs-string">&#x27;12345678&#x27;</span>))  <span class="hljs-comment"># 12345678</span><br><br><span class="hljs-comment"># float()，强制将int、float、bool、纯数字字符串转为float</span><br>print(float(<span class="hljs-number">10</span>))  <span class="hljs-comment"># 10.0</span><br>print(float(<span class="hljs-number">10.66</span>))  <span class="hljs-comment"># 10.66</span><br>print(float(<span class="hljs-literal">True</span>))  <span class="hljs-comment"># 1.0</span><br>print(float(<span class="hljs-literal">False</span>))  <span class="hljs-comment"># 0.0</span><br>print(float(<span class="hljs-string">&#x27;12345678&#x27;</span>))  <span class="hljs-comment"># 12345678.0</span><br><br><span class="hljs-comment"># complex()，强制将int、float、bool、纯数字字符串、complex转为complex</span><br>print(complex(<span class="hljs-number">10</span>))  <span class="hljs-comment"># (10+0j)</span><br>print(complex(<span class="hljs-number">10.66</span>))  <span class="hljs-comment"># (10.66+0j)</span><br>print(complex(<span class="hljs-literal">True</span>))  <span class="hljs-comment"># (1+0j)</span><br>print(complex(<span class="hljs-literal">False</span>))  <span class="hljs-comment"># 0j</span><br>print(complex(<span class="hljs-string">&#x27;12345678&#x27;</span>))  <span class="hljs-comment"># (12345678+0j)</span><br>print(complex(<span class="hljs-number">1</span>+<span class="hljs-number">2j</span>))  <span class="hljs-comment"># (1+2j)</span><br><br><span class="hljs-comment"># 当两个不同类型的数据进行运算的时候，低精度默认向高精度转换</span><br><span class="hljs-comment"># bool -&gt; int -&gt; float -&gt; complex</span><br><span class="hljs-comment"># 不要用小数作比较，存在精度损耗</span><br></code></pre></td></tr></table></figure><h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 2 -&gt; 10</span><br>a = <span class="hljs-number">0b11</span><br>print(int(a))  <span class="hljs-comment"># 3</span><br><br><span class="hljs-comment"># 8 -&gt; 10</span><br>b = <span class="hljs-number">0o11</span><br>print(int(b))  <span class="hljs-comment"># 9</span><br><br><span class="hljs-comment"># 16 -&gt; 10</span><br>c = <span class="hljs-number">0x11</span><br>print(int(c))  <span class="hljs-comment"># 17</span><br><br><span class="hljs-comment"># 10 -&gt; 2</span><br>d = <span class="hljs-number">3</span><br>print(bin(d))  <span class="hljs-comment"># 0b11</span><br><br><span class="hljs-comment"># 10 -&gt; 8</span><br>print(oct(d))  <span class="hljs-comment"># 0o3</span><br><br><span class="hljs-comment"># 10 -&gt; 16</span><br>print(hex(d))  <span class="hljs-comment"># 0x3</span><br></code></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li>可用 <code>&quot;....&quot;</code>、<code>&#39;...&#39;</code> 以及 <code>&quot;&quot;&quot;...&quot;&quot;&quot;</code> 来表示字符串</li><li>字符串可用 <code>/</code>来转义特殊字符，字符串前加 <code>r</code>，即表示原始字符串</li></ul><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 索引从0开始，有负索引，从-1开始，因为 -0 = 0</span><br><span class="hljs-comment"># 索引如果越界，会报错 IndexError</span><br>word = <span class="hljs-string">&#x27;Python&#x27;</span><br>print(word[<span class="hljs-number">0</span>])  <span class="hljs-comment"># P</span><br>print(word[<span class="hljs-number">-1</span>])  <span class="hljs-comment"># n</span><br>print(word[<span class="hljs-number">5</span>])  <span class="hljs-comment"># n</span><br>print(word[<span class="hljs-number">-6</span>])  <span class="hljs-comment"># P</span><br></code></pre></td></tr></table></figure><h4 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 切片越界自动处理，并不会报错</span><br>word = <span class="hljs-string">&#x27;Python&#x27;</span><br>print(word[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])  <span class="hljs-comment"># Py</span><br>print(word[::<span class="hljs-number">2</span>])  <span class="hljs-comment"># 设置步进为 2，Pto</span><br>print(word[<span class="hljs-number">2</span>:])  <span class="hljs-comment"># thon</span><br>print(word[:])  <span class="hljs-comment"># Python</span><br>print(word[<span class="hljs-number">3</span>:])  <span class="hljs-comment"># hon</span><br>print(word[<span class="hljs-number">1</span>:<span class="hljs-number">8</span>])  <span class="hljs-comment"># ython</span><br></code></pre></td></tr></table></figure><h4 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># format()</span><br><span class="hljs-comment"># # 格式&#123;:[填充][对齐 &lt; &gt; = ^][符号 + = ][宽度][千位分隔符 , _][.保留位数][类型 b c d o x n...]&#125;</span><br>print(<span class="hljs-string">&#x27;&#123;&#125;、&#123;&#125;、&#123;&#125;&#x27;</span>.format(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>))  <span class="hljs-comment"># 1、2、3</span><br>print(<span class="hljs-string">&#x27;&#123;0&#125;、&#123;1&#125;、&#123;2&#125;&#x27;</span>.format(a, b, <span class="hljs-number">3</span>))  <span class="hljs-comment"># 1、2、3</span><br>print(<span class="hljs-string">&#x27;&#123;2&#125;、&#123;1&#125;、&#123;0&#125;&#x27;</span>.format(<span class="hljs-number">1</span>, b, c))  <span class="hljs-comment"># 3、2、1</span><br>print(<span class="hljs-string">&#x27;&#123;x&#125;、&#123;y&#125;&#x27;</span>.format(x=<span class="hljs-number">3</span>, y=<span class="hljs-number">2</span>))  <span class="hljs-comment"># 3、2</span><br>print(<span class="hljs-string">&#x27;&#123;0[0]&#125;、&#123;0[1]&#125;&#x27;</span>.format([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]))  <span class="hljs-comment"># 1、2</span><br><br><br><span class="hljs-comment"># f-string 使用基本和 format() 格式相同</span><br><span class="hljs-comment"># &#123;&#125;中不允许出现\，如需使用可创建临时变量</span><br>word = <span class="hljs-string">&#x27;Python&#x27;</span><br>print(<span class="hljs-string">f&#x27;I like <span class="hljs-subst">&#123;word&#125;</span>&#x27;</span>)  <span class="hljs-comment"># I like Python</span><br>print(<span class="hljs-string">f&#x27;I like <span class="hljs-subst">&#123;word!s&#125;</span>&#x27;</span>)  <span class="hljs-comment"># 调用str()  I like Python</span><br>print(<span class="hljs-string">f&#x27;I like <span class="hljs-subst">&#123;word!a&#125;</span>&#x27;</span>)  <span class="hljs-comment"># 调用ascii()  I like &#x27;Python&#x27;</span><br>print(<span class="hljs-string">f&#x27;I like <span class="hljs-subst">&#123;word!r&#125;</span>&#x27;</span>)  <span class="hljs-comment"># 调用repr()  I like &#x27;Python&#x27;</span><br>print(<span class="hljs-string">f&#x27;I like <span class="hljs-subst">&#123;repr(word)&#125;</span>&#x27;</span>)  <span class="hljs-comment"># I like &#x27;Python&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># str()，强制转化成字符串</span><br><span class="hljs-comment"># repr()，不转移字符原型化输出字符串</span><br><span class="hljs-comment"># len()，查看字符串长度</span><br></code></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="索引-1"><a href="#索引-1" class="headerlink" title="索引"></a>索引</h4><h4 id="切片-1"><a href="#切片-1" class="headerlink" title="切片"></a>切片</h4><h4 id="常用函数-1"><a href="#常用函数-1" class="headerlink" title="常用函数"></a>常用函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># list()，强制转换成列表</span><br></code></pre></td></tr></table></figure><h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># +、-、*、/、//、%、**</span><br><span class="hljs-comment"># / 永远返回浮点数类型</span><br><span class="hljs-comment"># // 直接舍弃小数部分</span><br><span class="hljs-comment"># % 求余数，** 乘方</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux学习笔记（学习中...）</title>
    <link href="/2021/01/18/LinuxLearning/"/>
    <url>/2021/01/18/LinuxLearning/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Linux 运维，听上去就很牛逼，之前也前后前后差不多学过四五次 Linux 了，不过每次坚持不了多久，这次放假争取好好学一下，毕竟服务器便宜一点的就 Linux 服务器了，以后自己写软件接口什么的就靠这个了</p><a id="more"></a></blockquote><div class="note note-primary">            <p>Flag：争取每天学个两三个小时，写写博客</p>          </div><h2 id="学习环境"><a href="#学习环境" class="headerlink" title="学习环境"></a>学习环境</h2><ol><li><a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe">VMware-workstation-full-16.0.0-16894299.exe</a></li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-Everything-2009.iso">CentOS-7-x86_64-Everything-2009.iso</a></li><li><a href="https://cloud.189.cn/t/U7vURjZfmiMr">Xftp-7.0.0054p.exe</a></li><li><a href="https://cloud.189.cn/t/bqIfei3eeyui">Xshell-7.0.0054p.exe</a></li><li><a href="https://www.bilibili.com/video/BV12E411K79p">马哥Linux高端运维顶级云计算就业课程网络班37期</a></li></ol><h3 id="Xshell-连接-Centos7"><a href="#Xshell-连接-Centos7" class="headerlink" title="Xshell 连接 Centos7"></a>Xshell 连接 Centos7</h3><p>首先在 Linux 虚拟机打开终端，查看 ip 以及将防火墙关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1、查看系统是否监听于tcp协议的22号端口</span><br>ss -tnl<br><br><span class="hljs-comment"># 2、查看ip地址</span><br>ifconfig<br><span class="hljs-comment"># ifconfig command not found，则安装net-tools</span><br>yum install net-tools<br><span class="hljs-comment"># ip addr list同样可以查看ip地址</span><br>ip addr list<br><br><span class="hljs-comment"># 3、确保防火墙处于关闭状态</span><br>iptables -L -n<br>systemctl <span class="hljs-built_in">disable</span> firewalld.service<br>systemctl stop firewalld.service<br></code></pre></td></tr></table></figure><p>然后打开 xshell 连接 Linux 虚拟机</p><h2 id="Linux系统了解"><a href="#Linux系统了解" class="headerlink" title="Linux系统了解"></a>Linux系统了解</h2><h3 id="终端设备：terminal"><a href="#终端设备：terminal" class="headerlink" title="终端设备：terminal"></a>终端设备：terminal</h3><ul><li>物理终端，也称控制台：console</li><li>虚拟终端：tty</li><li>图形终端</li><li>串行终端：ttyS</li><li>伪终端：pty</li></ul><h3 id="命令行接口：CLI"><a href="#命令行接口：CLI" class="headerlink" title="命令行接口：CLI"></a>命令行接口：CLI</h3><p><code>[root@localhost ~]# </code></p><ul><li>root：当前用户名称</li><li>localhost：当前主机名</li><li>~：用户当前所在目录（current directory），也称工作目录（working directory）</li><li>#：命令提示符，# 为管理员账号，$ 为普通用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看终端设备</span><br>tty<br><br><span class="hljs-comment"># 查看接口程序</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span><br></code></pre></td></tr></table></figure><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p><code>/dev/pts/0</code></p><ul><li>最左侧 / 表示根目录</li><li>其余 / 表示为文件分隔符，Linux 文件分隔符为 / ，Windows 文件分隔符为 \ </li><li>文件名支持使用除 / 以外的任意字符，最长不能超过 255 个字符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 获取文件路径的基名basename</span><br>basename /etc/sysconfig/network-scripts/ifcfg-ens33<br>ifcfg-ens33<br><br><span class="hljs-comment"># 获取文件路径的目录名dirname</span><br>dirname /etc/sysconfig/network-scripts/ifcfg-ens33<br>/etc/sysconfig/network-scripts<br></code></pre></td></tr></table></figure><h2 id="Linux基础知识"><a href="#Linux基础知识" class="headerlink" title="Linux基础知识"></a>Linux基础知识</h2><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>语法通用格式：<code># COMMAND OPTIONS ARGUMENTS</code></p><h4 id="COMMAND"><a href="#COMMAND" class="headerlink" title="COMMAND"></a>COMMAND</h4><p>发起一个命令，请求内核将某个二进制程序运行为一个进程，命令本身就是一个可执行的程序文件，二进制格式的文件（ELF 格式），有可能调用共享库文件。命令分为两种，一种是由 shell 程序自带的命令，成为内置命令，另一种则是独立的可执行文件，文件名即为命令名，称为外部命令。shell 程序是独特的程序，负责解析用户提供的命令，查询通过环境变量，从左到右依次查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件信息</span><br>file /bin/ls<br><br><span class="hljs-comment"># 查看环境变量</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment"># 查看命令类型</span><br><span class="hljs-built_in">type</span> COMMAND<br></code></pre></td></tr></table></figure><h4 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h4><p>用来指定命令的运行特性，选项分为短选项和长选项两种，短选项如<code>-l</code> 、<code>-d</code>，有些命令选项没有<code>-</code> ，多数可合并，<code>-l -d</code>可合并为<code>-ld</code> ，长选项如<code>--help</code>，长选项不能合并，有些选项可以带参数称为选项参数。</p><h4 id="ARGUMENTS"><a href="#ARGUMENTS" class="headerlink" title="ARGUMENTS"></a>ARGUMENTS</h4><p>表示命令的作用对象，即命令对什么生效，多个命令参数之间以空白字符分隔，如<code>ls -ld /var /etc</code>。</p><h3 id="获取命令帮助"><a href="#获取命令帮助" class="headerlink" title="获取命令帮助"></a>获取命令帮助</h3><h4 id="内部命令"><a href="#内部命令" class="headerlink" title="内部命令"></a>内部命令</h4><p><code>help COMMAND</code></p><h4 id="外部命令"><a href="#外部命令" class="headerlink" title="外部命令"></a>外部命令</h4><ul><li>命令自带简要格式的使用帮助，<code>COMMAND --help</code></li><li>使用手册获取帮助，<code>man COMMAND</code>，使用手册位置：<code>/usr/share/man</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用各章节的命令不同</span><br>man1：用户命令；<br>man2：系统调用；<br>man3：C库调用；<br>man4：设备文件及特殊文件；<br>man5：文件格式；（配置文件格式）<br>man6：游戏使用帮助；<br>man7：杂项；<br>man8：管理工具及守护进行；<br><br><span class="hljs-comment"># 查看COMMAND在哪些手册出现过</span><br>whatis COMMAND<br><br><span class="hljs-comment"># 手动更新查询数据库</span><br>makewhatis<br></code></pre></td></tr></table></figure><ul><li>阅读手册快捷键<ul><li><code>空格</code>：先后翻一屏</li><li><code>b</code>：向前翻一屏</li><li><code>Ctrl+d</code>：向后翻半屏</li><li><code>Ctrl+u</code>：向前翻半屏</li><li><code>回车</code>：向后翻一行</li><li><code>k</code>：向前翻一行</li><li><code>G</code>：跳转至最后一行</li><li><code>g</code>：跳转到第一行</li><li><code>nG</code>：跳转至第n行</li><li><code>/keyword</code>：从前往后找，不区分大小写，<code>n</code>：往后翻</li><li><code>?keyword</code>：从后往前找，<code>n</code>：往前翻，<code>N</code>：往后翻</li><li><code>-M /PATH/TO/SOMEDIR</code>：到指定目录下查找命令手册并打开之</li><li><code>q</code>：退出手册</li></ul></li></ul><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># printing working directory</span><br>[root@localhost ~]<span class="hljs-comment"># pwd</span><br>/root<br></code></pre></td></tr></table></figure><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># change directory</span><br><br><span class="hljs-comment"># 切换回家目录，bash中，~表示家目录</span><br><span class="hljs-built_in">cd</span><br><span class="hljs-built_in">cd</span> ~<br><br><span class="hljs-comment"># 切换回上一次所在目录</span><br><span class="hljs-built_in">cd</span> -<br><br><span class="hljs-comment"># 相关环境变量，$PWD $OLDPWD，.代表当前目录，..代表上一级目录</span><br>[root@localhost ~]<span class="hljs-comment"># cd /etc/sysconfig</span><br>[root@localhost sysconfig]<span class="hljs-comment"># cd .</span><br>[root@localhost sysconfig]<span class="hljs-comment"># cd ..</span><br>[root@localhost etc]<span class="hljs-comment"># cd -</span><br>/etc/sysconfig<br></code></pre></td></tr></table></figure><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><p>文件详细属性：<code>drwxr-xr-x. 2 root   root      204 1月  18 11:20 anaconda</code></p><p><code>d</code>：表示文件类型，<code>-</code>，<code>d</code>，<code>b</code>，<code>c</code>，<code>l</code>，<code>s</code>，<code>p</code></p><p><code>rwxr-xr-x</code>：权限信息</p><p><code>rwx</code>：文件属主的权限</p><p><code>r-x</code>：文件数组的权限</p><p><code>r-x</code>：其他用户（非属主、属组）的权限</p><p><code>.</code>：表示该文件为隐藏文件</p><p><code>2</code>：数字表示文件被硬链接的次数</p><p><code>root</code>：文件的属主</p><p><code>root</code>：文件的属组</p><p><code>204 </code>：表示文件的大小，单位为字节</p><p><code>1月  18 11:20</code>：文件最近一次被修改的时间</p><p><code>anaconda</code>：文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># list，列出指定目录下的内容，ls [OPTION]... [FILE]...</span><br><span class="hljs-comment"># -a：显示所有文件，包括隐藏文件；</span><br>[root@localhost ~]<span class="hljs-comment"># ls -a /var/log</span><br>.         boot.log-20210119  firewalld           rhsm      vmware-network.1.log    vmware-vmtoolsd-root.log<br>..        btmp               grubby_prune_debug  secure    vmware-network.2.log    wtmp<br>anaconda  chrony             lastlog             spooler   vmware-network.log      yum.log<br>audit     cron               maillog             tallylog  vmware-vgauthsvc.log.0<br>boot.log  dmesg              messages            tuned     vmware-vmsvc-root.log<br><br><span class="hljs-comment"># -A:显示除.和..之外的所有文件</span><br>[root@localhost ~]<span class="hljs-comment"># ls -A /var/log</span><br>anaconda           btmp    firewalld           messages  tallylog              vmware-network.log        wtmp<br>audit              chrony  grubby_prune_debug  rhsm      tuned                 vmware-vgauthsvc.log.0    yum.log<br>boot.log           cron    lastlog             secure    vmware-network.1.log  vmware-vmsvc-root.log<br>boot.log-20210119  dmesg   maillog             spooler   vmware-network.2.log  vmware-vmtoolsd-root.log<br><br><span class="hljs-comment"># -l,--long：长格式列表，即显示文件的详细属性</span><br>[root@localhost ~]<span class="hljs-comment"># ls -l /var/log</span><br>总用量 1040<br>drwxr-xr-x. 2 root   root      204 1月  18 11:20 anaconda<br>drwx------. 2 root   root       23 1月  18 11:21 audit<br>-rw-------. 1 root   root        0 1月  19 17:46 boot.log<br><br><br><span class="hljs-comment"># -h,--human-readable：对文件大小单位进行换算显示，换算之后并不精确</span><br>[root@localhost ~]<span class="hljs-comment"># ls -lh /var/log</span><br>总用量 1.1M<br>drwxr-xr-x. 2 root   root    204 1月  18 11:20 anaconda<br>drwx------. 2 root   root     23 1月  18 11:21 audit<br>-rw-------. 1 root   root      0 1月  19 17:46 boot.log<br><br><br><span class="hljs-comment"># -d：查看目录自身而非其内部的文件列表，通常与l连用</span><br>[root@localhost ~]<span class="hljs-comment"># ls -ld /var/log</span><br>drwxr-xr-x. 7 root root 4096 1月  19 17:46 /var/<span class="hljs-built_in">log</span><br><br><span class="hljs-comment"># -r：revrese，逆序显示</span><br><span class="hljs-comment"># -R：recursive，递归显示</span><br></code></pre></td></tr></table></figure><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat concatenate，文本文件查看工具，[OPTION]... [FILE]...</span><br><span class="hljs-comment"># -n：显示文本行编号</span><br>[root@localhost ~]<span class="hljs-comment"># cat -n /etc/issue</span><br>     1\S<br>     2Kernel \r on an \m<br>     3<br><br><span class="hljs-comment"># -E：显示行结束符</span><br>[root@localhost ~]<span class="hljs-comment"># cat -E /etc/issue</span><br>\S$<br>Kernel \r on an \m$<br>$<br></code></pre></td></tr></table></figure><h4 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 与cat反过来，逆序打印文件内容</span><br><br>[root@localhost ~]<span class="hljs-comment"># cat /etc/passwd</span><br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>sync:x:5:0:sync:/sbin:/bin/sync<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br>polkitd:x:999:998:User <span class="hljs-keyword">for</span> polkitd:/:/sbin/nologin<br>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin<br>postfix:x:89:89::/var/spool/postfix:/sbin/nologin<br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br><br><br>[root@localhost ~]<span class="hljs-comment"># tac /etc/passwd</span><br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br>postfix:x:89:89::/var/spool/postfix:/sbin/nologin<br>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin<br>polkitd:x:999:998:User <span class="hljs-keyword">for</span> polkitd:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>sync:x:5:0:sync:/sbin:/bin/sync<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>root:x:0:0:root:/root:/bin/bash<br></code></pre></td></tr></table></figure><h4 id="file"><a href="#file" class="headerlink" title="file"></a>file</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件内容类型</span><br>[root@localhost ~]<span class="hljs-comment"># file /etc/fstab</span><br>/etc/fstab: ASCII text<br></code></pre></td></tr></table></figure><h4 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 回显</span><br>[root@localhost ~]<span class="hljs-comment"># echo &#x27;hello world&#x27;</span><br>hello world<br><br><span class="hljs-comment"># -n：不自动进行换行</span><br>[root@localhost ~]<span class="hljs-comment"># echo -n &#x27;hello world&#x27;</span><br>hello world[root@localhost ~]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># -e：让转义符生效</span><br>[root@localhost ~]<span class="hljs-comment"># echo -e &#x27;hello \n world&#x27;</span><br>hello <br> world<br><br><span class="hljs-comment"># 单引号：强引用，变量引用不执行替换</span><br>[root@localhost ~]<span class="hljs-comment"># echo &#x27;$SHELL&#x27;</span><br><span class="hljs-variable">$SHELL</span><br><br><span class="hljs-comment"># 双引号：弱引用，变量引用会被替换</span><br>[root@localhost ~]<span class="hljs-comment"># echo &quot;$SHELL&quot;</span><br>/bin/bash<br><br><span class="hljs-comment"># 变量引用的正规符号：$&#123;name&#125;</span><br>[root@localhost ~]<span class="hljs-comment"># echo $&#123;SHELL&#125;</span><br>/bin/bash<br></code></pre></td></tr></table></figure><h4 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 关机或重启命令，shutdown [OPTIONS...] [TIME] [WALL...]</span><br><br><span class="hljs-comment"># OPTIONS: -h：关机，-r：重启，-c：取消操作</span><br><span class="hljs-comment"># TIME：now，hh:mm，+m</span><br><span class="hljs-comment"># WALL：即为广播发送的消息</span><br><br><span class="hljs-comment"># 5分钟后重启</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -r +5</span><br>Shutdown scheduled <span class="hljs-keyword">for</span> 二 2021-01-19 22:26:29 CST, use <span class="hljs-string">&#x27;shutdown -c&#x27;</span> to cancel.<br>[root@localhost ~]<span class="hljs-comment"># </span><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:21:29 CST):<br><br>The system is going down <span class="hljs-keyword">for</span> reboot at Tue 2021-01-19 22:26:29 CST!<br><br><span class="hljs-comment"># 取消计划重启操作</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -c</span><br><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:22:04 CST):<br><br>The system shutdown has been cancelled at Tue 2021-01-19 22:23:04 CST!<br><br><span class="hljs-comment"># 广播&quot;Hello Everyone，I wanna reboot at 10m later&quot;，并设置10分钟后重启</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -r +10 &quot;Hello Everyone，I wanna reboot at 10m later&quot;</span><br>Shutdown scheduled <span class="hljs-keyword">for</span> 二 2021-01-19 22:33:31 CST, use <span class="hljs-string">&#x27;shutdown -c&#x27;</span> to cancel.<br>[root@localhost ~]<span class="hljs-comment"># </span><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:23:31 CST):<br><br>Hello Everyone，I wanna reboot at 10m later<br>The system is going down <span class="hljs-keyword">for</span> reboot at Tue 2021-01-19 22:33:31 CST!<br><br><span class="hljs-comment"># 关机</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -h now</span><br>Connection closing...Socket close.<br><br>Connection closed by foreign host.<br><br>Disconnected from remote host(centos7) at 22:24:19.<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完美校园健康打卡云函数版</title>
    <link href="/2021/01/17/17wanxiaoCheckin-SCF/"/>
    <url>/2021/01/17/17wanxiaoCheckin-SCF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>基于腾讯云函数的完美校园打卡，支持多人打卡，支持打卡字段信息展示，支持微信推送，每天早上六点自动打卡，理论上所有学校通用！！</p><a id="more"></a></blockquote><div class="note note-success">            <p>项目地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">https://github.com/ReaJason/17wanxiaoCheckin-Actions</a></p>          </div><div class="note note-success">            <p>之前的抓包部署教程请前往：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/blob/master/README_LAST.md">完美校园抓包打卡</a>，你可以在这里学习模拟器抓包APP签到请求哦。</p>          </div><h2 id="前言（GitHub-Actions-已修复，可使用）"><a href="#前言（GitHub-Actions-已修复，可使用）" class="headerlink" title="前言（GitHub Actions 已修复，可使用）"></a>前言（GitHub Actions 已修复，可使用）</h2><p>由于 GitHub Actions 暂无法与完美校园交换密钥，可能完美校园把 GitHub Actions 的 IP 给 ban 了（猜测），暂时给出一个腾讯云函数版的解决方案，其余方案还有：服务器、<a href="https://blog.imyan.ren/posts/eb6032e9/">coding</a>、手机（Tasker），以及其他可自动化运行python脚本的办法皆可！</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ol><li>已有腾讯云账号（没有，可以注册）</li><li>腾讯云已实名（觉得实名有困难，不建议用）</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1、进入控制台"><a href="#1、进入控制台" class="headerlink" title="1、进入控制台"></a>1、进入控制台</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%BF%9B%E5%85%A5%E6%8E%A7%E5%88%B6%E5%8F%B0.png" alt="进入控制台.png"></p><h3 id="2、进入云函数"><a href="#2、进入云函数" class="headerlink" title="2、进入云函数"></a>2、进入云函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%90%9C%E7%B4%A2%E4%BA%91%E5%87%BD%E6%95%B0.png" alt="进入云函数.png"></p><h3 id="3、新建云函数"><a href="#3、新建云函数" class="headerlink" title="3、新建云函数"></a>3、新建云函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E9%80%89%E6%8B%A9%E5%9C%B0%E5%8C%BA.png" alt="新建云函数.png"></p><h3 id="4、上传代码"><a href="#4、上传代码" class="headerlink" title="4、上传代码"></a>4、上传代码</h3><p>在此下载 ，<a href="https://lingsiki.lanzous.com/b0ekc7p9i">https://lingsiki.lanzous.com/b0ekc7p9i</a> 密码：7dwe</p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%96%B0%E5%BB%BA%E5%87%BD%E6%95%B0.png" alt="上传代码.png"></p><h3 id="5、触发器配置"><a href="#5、触发器配置" class="headerlink" title="5、触发器配置"></a>5、触发器配置</h3><p>配置时间可具体参考，它下面的 <a href="https://cloud.tencent.com/document/product/583/9708">链接</a></p><p>每日 6 点打卡：<code>0 0 6 * * * *</code></p><p>每日 6、12、17点打卡：<code>0 0 6,12,17 * * * *</code></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%AE%BE%E7%BD%AE%E8%A7%A6%E5%8F%91%E5%99%A8.png" alt="设置触发器.png"></p><h3 id="6、添加环境变量"><a href="#6、添加环境变量" class="headerlink" title="6、添加环境变量"></a>6、添加环境变量</h3><ul><li>设置900秒，不管为什么这么做，但是时长得拉满</li><li>USERNAME字段：手机号1,手机号2,……（与下面密码对应），例如：<code>1737782***,13602***</code></li><li>PASSWORD字段：密码1,密码2,……  （与上面账号对应），例如：<code>123456,456789</code></li><li>SCKEY字段：填写一个即可，例如：<code>SCU90543*******</code>，没有请前往 <a href="https://sc.ftqq.com/3.version">Server酱</a> 注册获取</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="编辑环境变量.png"></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="设置环境变量.png"></p><h3 id="7、部署测试"><a href="#7、部署测试" class="headerlink" title="7、部署测试"></a>7、部署测试</h3><p>如果之前使用过GitHub Actions，请将代码该修改的地方修改，切勿全部复制粘贴，因为时间判定修改了</p><p>每一次修改代码之后，一定要点一下测试（自动部署），或者部署代码才能生效</p><p>查看微信推送情况（检查json 字段中的 areaStr 是否为自己所在地址，如果不在，请一定要修改代码，因为打卡的地址不对可不行；如果 Message 有值为 None，请一定要修改代码，因为该值无法自动填写），<strong>至此每日六点多将会自行打卡</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%B5%8B%E8%AF%95.png" alt="测试.png"></p><h3 id="8、如果有什么报错或者其他问题，请前往-这里-自行解决，或进群反馈没有解决的问题"><a href="#8、如果有什么报错或者其他问题，请前往-这里-自行解决，或进群反馈没有解决的问题" class="headerlink" title="8、如果有什么报错或者其他问题，请前往 这里 自行解决，或进群反馈没有解决的问题"></a>8、如果有什么报错或者其他问题，请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki">这里</a> 自行解决，或进群反馈没有解决的问题</h3>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我脑子里面到底在想什么</title>
    <link href="/2021/01/14/WhatIWant/"/>
    <url>/2021/01/14/WhatIWant/</url>
    
    <content type="html"><![CDATA[<blockquote><p>真的有点受够了，做这不是做那也不是，想学这个也想学那个，这个做一点那个也做一点，心里没有目标，对未来也没有打算，苟且偷生的生活真不是我想要的，我也想成为大佬，我也想好好钻研知识，但是心里没个目标，好难行动啊。</p><a id="more"></a></blockquote><h2 id="我做了些什么"><a href="#我做了些什么" class="headerlink" title="我做了些什么"></a>我做了些什么</h2>]]></content>
    
    
    <categories>
      
      <category>Other</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Thinking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微博超话工具</title>
    <link href="/2020/10/19/WeiBoSuperTopicsTool/"/>
    <url>/2020/10/19/WeiBoSuperTopicsTool/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我的第一个 PyQt5 的 GUI 程序，抓取微博 API  进行的封装集一键超话签到，获取每日积分<br>微博 APP 登录积分，帖子评论转发，超话打榜，积分查询于一体的微博超话工具<br>本工具使用的微博 API 接口分享 —&gt; <a href="https://github.com/ReaJason/WeiBo_SuperTopics">https://github.com/ReaJason/WeiBo_SuperTopics</a></p><a id="more"></a></blockquote><div class="note note-danger">            <p>由于登录接口失效，暂无法使用</p>          </div><h3 id="一、基本功能"><a href="#一、基本功能" class="headerlink" title="一、基本功能"></a>一、基本功能</h3><ol><li>微博账号登录，验证码自动识别</li><li>关注超话签到 +16 分 +6 点以后签到随机积分</li><li>每日积分获取 +3/+5/+8</li><li>微博超话 APP 登录积分 +10 分</li><li>超话帖子评论转发点赞 +16 分</li><li>任务中心查询积分</li><li>超话打榜</li><li>一言欣赏</li></ol><h3 id="二、界面截图"><a href="#二、界面截图" class="headerlink" title="二、界面截图"></a>二、界面截图</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://img.shields.io/badge/python-3.7.4-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/pyinstaller-4.0-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/PyQt5-5.15.1-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/requests-2.24.0-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/torch-1.0.1-brightgreen?style=social&logo=appveyor"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/%E6%97%A0PyTorch%E7%89%88%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="无 PyTorch 版登录界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">1、无 PyTorch 版登录界面</p></center><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/PyTorch%E7%89%88%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="PyTorch 版登录界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">2、PyTorch 版登录界面</p></center><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/%E8%BF%90%E8%A1%8C%E7%95%8C%E9%9D%A2.png" alt="运行界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">3、运行界面</p></center><h3 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h3><ol><li><p>花了点时间做了两个版本，第一次打包分享，请在网络环境良好的情况下运行本程序：</p><ul><li>无 PyTorch 版：<ul><li>基于 Win7 32 位操作系统打包，除了 xp 应该都可以运行</li><li>手动输入验证码，由于没有集成 pytorch，程序体积小，启动快</li><li>下载地址：<ul><li><del><a href="https://pan.baidu.com/s/1sBs48GbNM7tzgOiGjvhy1Q">https://pan.baidu.com/s/1sBs48GbNM7tzgOiGjvhy1Q</a> 提取码: 1111</del></li><li><del><a href="https://cloud.189.cn/t/r2YvqmEziqy2">https://cloud.189.cn/t/r2YvqmEziqy2</a> 提取码：sk1z</del></li><li><del><a href="https://lingsiki.lanzous.com/i08NFhka96h">https://lingsiki.lanzous.com/i08NFhka96h</a> 提取码:1111</del></li></ul></li><li>使用方法：<ul><li>解压打开exe文件</li><li>输入账号密码，点击验证，输入验证码登录</li><li>登录成功，等待获取超话列表，全选（可随意选择功能），选择打榜超话（可选），开始</li></ul></li></ul></li><li>PyTorch 版：<ul><li>基于 Win10 64 位打包，32 位的操作系统应该用不了</li><li>自动输入验证码，优点就是不需要手动输，缺点就体积大，启动略慢</li><li>下载地址：<ul><li><del><a href="https://pan.baidu.com/s/1TNQdRz_4wVpdVGBXTa3bgA">https://pan.baidu.com/s/1TNQdRz_4wVpdVGBXTa3bgA</a> 提取码: 1111</del></li><li><del><a href="https://cloud.189.cn/t/iAzQbaRzmaIj">https://cloud.189.cn/t/iAzQbaRzmaIj</a> 提取码：kr0g</del></li></ul></li><li>使用方法：<ul><li>解压打开exe文件（启动有点慢，耐心等待）</li><li>输入账号密码点击登录</li><li>登录成功，等待获取超话列表，全选（可随意选择功能），选择打榜超话（可选），开始</li></ul></li></ul></li></ul></li><li><p>PyTorch 版接入了 <a href="https://github.com/skygongque/captcha-weibo">微博验证码识别</a> 的所用到的深度学习 Pytorch 包（90+ M，最新的版本达到了几百兆），因此打包的程序体积也无可避免的变大，考虑过服务器架设打码服务，不过本地更安全（我也没钱买服务器😛）。</p></li><li><p>超话打榜功能开始前请选择打榜超话和分数后再开始。</p><ul><li>select1 对应 1 分</li><li>select10 对应 10 分</li><li>select66 对应 66 分</li><li>select256 对应全部积分</li></ul></li><li><p>如果因未知原因造成软件闪退请及时反馈或重启程序再试：</p><ul><li>反馈格式：「操作系统」+「闪退前使用的功能选项」+「闪退前运行日志的截图」。</li><li>有不错的建议也可以提出来（比如 UI ）</li><li>反馈请发邮箱或在 GitHub 提 issue：<ul><li>Email：<a href="mailto:&#x72;&#x65;&#97;&#106;&#97;&#x73;&#x6f;&#110;&#x40;&#49;&#54;&#51;&#x2e;&#99;&#111;&#x6d;">&#x72;&#x65;&#97;&#106;&#97;&#x73;&#x6f;&#110;&#x40;&#49;&#54;&#51;&#x2e;&#99;&#111;&#x6d;</a></li><li>GitHub：<a href="https://github.com/ReaJason/WeiBo_SuperTopics">https://github.com/ReaJason/WeiBo_SuperTopics</a></li></ul></li></ul></li><li><p>关于登录之后保存按钮，只是为了下次启动自动输入（也可以自己修改），会在程序运行的路径下保存账号和密码的明文（介意勿用）。</p></li><li><p>由于微博的一些沙雕检测，请不要一台设备登录太多账号，可能会出现异常的情况，比如无法签到，无法发微博，甚至冻结的情况</p></li></ol><h3 id="四、免责声明"><a href="#四、免责声明" class="headerlink" title="四、免责声明"></a>四、免责声明</h3><ol><li>本程序只供参考学习，请勿用于违法用途</li><li>使用本程序导致微博账号异常或冻结甚至封禁都与作者无关</li><li>凡以任何方式下载使用本程序者，视为自愿接受本声明约束。</li></ol><h3 id="五、参考项目"><a href="#五、参考项目" class="headerlink" title="五、参考项目"></a>五、参考项目</h3><ol><li><a href="https://github.com/skygongque/captcha-weibo">https://github.com/skygongque/captcha-weibo</a></li><li><a href="https://github.com/wxy1343/weibo_points">https://github.com/wxy1343/weibo_points</a></li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.zh-CN.md">中文文案指北</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PyQt5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完美校园健康打卡&amp;校内打卡</title>
    <link href="/2020/06/28/17wanxiaoCheckin/"/>
    <url>/2020/06/28/17wanxiaoCheckin/</url>
    
    <content type="html"><![CDATA[<blockquote><p>基于GitHub Actions的完美校园打卡，支持多人打卡，支持打卡字段信息展示，支持微信推送，每天早上六点自动打卡，理论上所有学校通用！！</p><a id="more"></a></blockquote><div class="note note-success">            <p>项目地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">https://github.com/ReaJason/17wanxiaoCheckin-Actions</a></p>          </div><div class="note note-success">            <p>之前的抓包部署教程请前往：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/blob/master/README_LAST.md">完美校园抓包打卡</a>，你可以在这里学习模拟器抓包APP签到请求哦。</p>          </div><h2 id="一、功能介绍"><a href="#一、功能介绍" class="headerlink" title="一、功能介绍"></a>一、功能介绍</h2><ol><li>完美校园模拟登录获取 token</li><li>自动获取上次提交的打卡数据</li><li>自动化任务分三次运行（ps：没有校内打卡就不会校内打卡，没有晚上打卡也不会晚上打卡的）<ul><li><code>上午六点</code>：健康打卡，上午校内打卡；</li><li><code>中午十二点</code>：健康打卡，下午校内打卡；</li><li><code>下午五点</code>：健康打卡，晚上校内打卡；</li></ul></li><li>微信推送打卡消息</li></ol><h2 id="二、打卡数据"><a href="#二、打卡数据" class="headerlink" title="二、打卡数据"></a>二、打卡数据</h2><p>细心的你应该会发现，自从第一次打卡之后，每次进去信息基本自动填写好了，我抓取的就是这个接口，这样子也相当于大家不用抓包了，如果你进入完美校园健康打卡界面，它没有自动填写信息，可能本项目也就不起作用了，可以试试打一次卡然后再进入看有无自动填充信息。</p><h3 id="1、获取上次打卡信息"><a href="#1、获取上次打卡信息" class="headerlink" title="1、获取上次打卡信息"></a>1、获取上次打卡信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_post_json</span>(<span class="hljs-params">jsons</span>):</span><br>    retry = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> retry &lt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">try</span>:<br>            res = requests.post(url=<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=jsons, timeout=<span class="hljs-number">10</span>).json()<br>            <span class="hljs-comment"># print(res)</span><br>        <span class="hljs-keyword">except</span> BaseException:<br>            retry += <span class="hljs-number">1</span><br>            logging.warning(<span class="hljs-string">&#x27;获取完美校园打卡post参数失败，正在重试...&#x27;</span>)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            <span class="hljs-comment"># logging.warning(res)</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        data = json.loads(res[<span class="hljs-string">&#x27;data&#x27;</span>])<br>        post_dict = &#123;<br>            <span class="hljs-string">&quot;areaStr&quot;</span>: data[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>            <span class="hljs-string">&quot;deptStr&quot;</span>: data[<span class="hljs-string">&#x27;deptStr&#x27;</span>],<br>            <span class="hljs-string">&quot;deptid&quot;</span>: data[<span class="hljs-string">&#x27;deptStr&#x27;</span>][<span class="hljs-string">&#x27;deptid&#x27;</span>],<br>            <span class="hljs-string">&quot;customerid&quot;</span>: data[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>            <span class="hljs-string">&quot;userid&quot;</span>: data[<span class="hljs-string">&#x27;userid&#x27;</span>],<br>            <span class="hljs-string">&quot;username&quot;</span>: data[<span class="hljs-string">&#x27;username&#x27;</span>],<br>            <span class="hljs-string">&quot;stuNo&quot;</span>: data[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>            <span class="hljs-string">&quot;phonenum&quot;</span>: data[<span class="hljs-string">&#x27;phonenum&#x27;</span>],<br>            <span class="hljs-string">&quot;templateid&quot;</span>: data[<span class="hljs-string">&#x27;templateid&#x27;</span>],<br>            <span class="hljs-string">&quot;updatainfo&quot;</span>: [&#123;<span class="hljs-string">&quot;propertyname&quot;</span>: i[<span class="hljs-string">&quot;propertyname&quot;</span>], <span class="hljs-string">&quot;value&quot;</span>: i[<span class="hljs-string">&quot;value&quot;</span>]&#125; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span><br>                           data[<span class="hljs-string">&#x27;cusTemplateRelations&#x27;</span>]],<br>            <span class="hljs-string">&quot;checkbox&quot;</span>: [&#123;<span class="hljs-string">&quot;description&quot;</span>: i[<span class="hljs-string">&quot;decription&quot;</span>], <span class="hljs-string">&quot;value&quot;</span>: i[<span class="hljs-string">&quot;value&quot;</span>]&#125; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span><br>                         data[<span class="hljs-string">&#x27;cusTemplateRelations&#x27;</span>]],<br>        &#125;<br>        <span class="hljs-comment"># print(json.dumps(post_dict, sort_keys=True, indent=4, ensure_ascii=False))</span><br>        logging.info(<span class="hljs-string">&#x27;获取完美校园打卡post参数成功&#x27;</span>)<br>        <span class="hljs-keyword">return</span> post_dict<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-comment"># 用来获取健康打卡打卡数据的json字段</span><br>json1 = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>,<br>             <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;templateid&quot;</span>: <span class="hljs-string">&quot;pneumonia&quot;</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>             <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;userComeApp&quot;</span>&#125;<br>post_dict = get_post_json(json1)<br><br><span class="hljs-comment"># 用来获取校内打卡打卡数据的json字段</span><br>json2 = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>,<br>         <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;templateid&quot;</span>: id_list[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;customerAppTypeRuleId&quot;</span>: id_list[<span class="hljs-string">&#x27;id&#x27;</span>],<br>                      <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                      <span class="hljs-string">&quot;token&quot;</span>: token&#125;, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;userComeAppSchool&quot;</span>,<br>         <span class="hljs-string">&quot;token&quot;</span>: token&#125;<br>campus_dict = get_post_json(json2)<br></code></pre></td></tr></table></figure><h3 id="2、获取本校校内打卡模板id"><a href="#2、获取本校校内打卡模板id" class="headerlink" title="2、获取本校校内打卡模板id"></a>2、获取本校校内打卡模板id</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_custom_id</span>(<span class="hljs-params">token</span>):</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;appClassify&quot;</span>: <span class="hljs-string">&quot;DK&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token<br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/clock/school/getUserInfo&quot;</span>, data=data)<br>        <span class="hljs-comment"># print(res.text)</span><br>        custom = res.json()[<span class="hljs-string">&#x27;userInfo&#x27;</span>].get(<span class="hljs-string">&#x27;customerAppTypeId&#x27;</span>)<br>        <span class="hljs-keyword">if</span> custom:<br>            <span class="hljs-keyword">return</span> custom<br>        <span class="hljs-keyword">return</span> res.json()[<span class="hljs-string">&#x27;userInfo&#x27;</span>].get(<span class="hljs-string">&#x27;customerId&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br></code></pre></td></tr></table></figure><h3 id="3、获取本校校内打卡id"><a href="#3、获取本校校内打卡id" class="headerlink" title="3、获取本校校内打卡id"></a>3、获取本校校内打卡id</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_id_list</span>(<span class="hljs-params">token, custom_id</span>):</span><br>    post_data = &#123;<br>        <span class="hljs-string">&quot;customerAppTypeId&quot;</span>: custom_id,<br>        <span class="hljs-string">&quot;longitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;latitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token<br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/clock/school/rules&quot;</span>, data=post_data)<br>        <span class="hljs-comment"># print(res.text)</span><br>        <span class="hljs-keyword">return</span> res.json()[<span class="hljs-string">&#x27;customerAppTypeDto&#x27;</span>][<span class="hljs-string">&#x27;ruleList&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><h3 id="4、健康打卡"><a href="#4、健康打卡" class="headerlink" title="4、健康打卡"></a>4、健康打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">healthy_check_in</span>(<span class="hljs-params">username, token, post_dict</span>):</span><br>    check_json = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;submitUpInfo&quot;</span>,<br>                  <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;deptStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptStr&#x27;</span>], <span class="hljs-string">&quot;areaStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;reportdate&quot;</span>: round(time.time() * <span class="hljs-number">1000</span>), <span class="hljs-string">&quot;customerid&quot;</span>: post_dict[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>                               <span class="hljs-string">&quot;deptid&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptid&#x27;</span>], <span class="hljs-string">&quot;source&quot;</span>: <span class="hljs-string">&quot;app&quot;</span>,<br>                               <span class="hljs-string">&quot;templateid&quot;</span>: post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                               <span class="hljs-string">&quot;username&quot;</span>: post_dict[<span class="hljs-string">&#x27;username&#x27;</span>], <span class="hljs-string">&quot;phonenum&quot;</span>: username,<br>                               <span class="hljs-string">&quot;userid&quot;</span>: post_dict[<span class="hljs-string">&#x27;userid&#x27;</span>], <span class="hljs-string">&quot;updatainfo&quot;</span>: post_dict[<span class="hljs-string">&#x27;updatainfo&#x27;</span>],<br>                               <span class="hljs-string">&quot;gpsType&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>                  &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=check_json).json()<br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;校内打卡请求出错&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h3 id="5、校内打卡"><a href="#5、校内打卡" class="headerlink" title="5、校内打卡"></a>5、校内打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">campus_check_in</span>(<span class="hljs-params">username, token, post_dict, id</span>):</span><br>    check_json = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;submitUpInfoSchool&quot;</span>,<br>                  <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;deptStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;areaStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;reportdate&quot;</span>: round(time.time() * <span class="hljs-number">1000</span>), <span class="hljs-string">&quot;customerid&quot;</span>: post_dict[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>                               <span class="hljs-string">&quot;deptid&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptid&#x27;</span>], <span class="hljs-string">&quot;source&quot;</span>: <span class="hljs-string">&quot;app&quot;</span>,<br>                               <span class="hljs-string">&quot;templateid&quot;</span>: post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                               <span class="hljs-string">&quot;username&quot;</span>: post_dict[<span class="hljs-string">&#x27;username&#x27;</span>], <span class="hljs-string">&quot;phonenum&quot;</span>: username,<br>                               <span class="hljs-string">&quot;userid&quot;</span>: post_dict[<span class="hljs-string">&#x27;userid&#x27;</span>], <span class="hljs-string">&quot;updatainfo&quot;</span>: post_dict[<span class="hljs-string">&#x27;updatainfo&#x27;</span>],<br>                               <span class="hljs-string">&quot;customerAppTypeRuleId&quot;</span>: id, <span class="hljs-string">&quot;clockState&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>                  <span class="hljs-string">&quot;token&quot;</span>: token<br>                  &#125;<br>    <span class="hljs-comment"># print(check_json)</span><br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=check_json).json()<br><br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>])<br>        <span class="hljs-keyword">else</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>])<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```校内打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;校内打卡请求出错&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h3 id="6、获取第二类健康打卡的信息"><a href="#6、获取第二类健康打卡的信息" class="headerlink" title="6、获取第二类健康打卡的信息"></a>6、获取第二类健康打卡的信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_recall_data</span>(<span class="hljs-params">token</span>):</span><br>    retry = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> retry &lt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">try</span>:<br>            res = requests.post(url=<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/reported/recall&quot;</span>, data=&#123;<span class="hljs-string">&quot;token&quot;</span>: token&#125;, timeout=<span class="hljs-number">10</span>).json()<br>        <span class="hljs-keyword">except</span> BaseException:<br>            retry += <span class="hljs-number">1</span><br>            logging.warning(<span class="hljs-string">&#x27;获取完美校园打卡post参数失败，正在重试...&#x27;</span>)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">0</span>:<br>            logging.info(<span class="hljs-string">&#x27;获取完美校园打卡post参数成功&#x27;</span>)<br>            <span class="hljs-keyword">return</span> res[<span class="hljs-string">&#x27;data&#x27;</span>]<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><h3 id="7、第二类健康打卡"><a href="#7、第二类健康打卡" class="headerlink" title="7、第二类健康打卡"></a>7、第二类健康打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">receive_check_in</span>(<span class="hljs-params">token, custom_id, post_dict</span>):</span><br>    check_json = &#123;<br>        <span class="hljs-string">&quot;userId&quot;</span>: post_dict[<span class="hljs-string">&#x27;userId&#x27;</span>],<br>        <span class="hljs-string">&quot;name&quot;</span>: post_dict[<span class="hljs-string">&#x27;name&#x27;</span>],<br>        <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>        <span class="hljs-string">&quot;whereabouts&quot;</span>: post_dict[<span class="hljs-string">&#x27;whereabouts&#x27;</span>],<br>        <span class="hljs-string">&quot;familyWhereabouts&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;beenToWuhan&quot;</span>: post_dict[<span class="hljs-string">&#x27;beenToWuhan&#x27;</span>],<br>        <span class="hljs-string">&quot;contactWithPatients&quot;</span>: post_dict[<span class="hljs-string">&#x27;contactWithPatients&#x27;</span>],<br>        <span class="hljs-string">&quot;symptom&quot;</span>: post_dict[<span class="hljs-string">&#x27;symptom&#x27;</span>],<br>        <span class="hljs-string">&quot;fever&quot;</span>: post_dict[<span class="hljs-string">&#x27;fever&#x27;</span>],<br>        <span class="hljs-string">&quot;cough&quot;</span>: post_dict[<span class="hljs-string">&#x27;cough&#x27;</span>],<br>        <span class="hljs-string">&quot;soreThroat&quot;</span>: post_dict[<span class="hljs-string">&#x27;soreThroat&#x27;</span>],<br>        <span class="hljs-string">&quot;debilitation&quot;</span>: post_dict[<span class="hljs-string">&#x27;debilitation&#x27;</span>],<br>        <span class="hljs-string">&quot;diarrhea&quot;</span>: post_dict[<span class="hljs-string">&#x27;diarrhea&#x27;</span>],<br>        <span class="hljs-string">&quot;cold&quot;</span>: post_dict[<span class="hljs-string">&#x27;cold&#x27;</span>],<br>        <span class="hljs-string">&quot;staySchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;staySchool&#x27;</span>],<br>        <span class="hljs-string">&quot;contacts&quot;</span>: post_dict[<span class="hljs-string">&#x27;contacts&#x27;</span>],<br>        <span class="hljs-string">&quot;emergencyPhone&quot;</span>: post_dict[<span class="hljs-string">&#x27;emergencyPhone&#x27;</span>],<br>        <span class="hljs-string">&quot;address&quot;</span>: post_dict[<span class="hljs-string">&#x27;address&#x27;</span>],<br>        <span class="hljs-string">&quot;familyForAddress&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;collegeId&quot;</span>: post_dict[<span class="hljs-string">&#x27;collegeId&#x27;</span>],<br>        <span class="hljs-string">&quot;majorId&quot;</span>: post_dict[<span class="hljs-string">&#x27;majorId&#x27;</span>],<br>        <span class="hljs-string">&quot;classId&quot;</span>: post_dict[<span class="hljs-string">&#x27;classId&#x27;</span>],<br>        <span class="hljs-string">&quot;classDescribe&quot;</span>: post_dict[<span class="hljs-string">&#x27;classDescribe&#x27;</span>],<br>        <span class="hljs-string">&quot;temperature&quot;</span>: post_dict[<span class="hljs-string">&#x27;temperature&#x27;</span>],<br>        <span class="hljs-string">&quot;confirmed&quot;</span>: post_dict[<span class="hljs-string">&#x27;confirmed&#x27;</span>],<br>        <span class="hljs-string">&quot;isolated&quot;</span>: post_dict[<span class="hljs-string">&#x27;isolated&#x27;</span>],<br>        <span class="hljs-string">&quot;passingWuhan&quot;</span>: post_dict[<span class="hljs-string">&#x27;passingWuhan&#x27;</span>],<br>        <span class="hljs-string">&quot;passingHubei&quot;</span>: post_dict[<span class="hljs-string">&#x27;passingHubei&#x27;</span>],<br>        <span class="hljs-string">&quot;patientSide&quot;</span>: post_dict[<span class="hljs-string">&#x27;patientSide&#x27;</span>],<br>        <span class="hljs-string">&quot;patientContact&quot;</span>: post_dict[<span class="hljs-string">&#x27;patientContact&#x27;</span>],<br>        <span class="hljs-string">&quot;mentalHealth&quot;</span>: post_dict[<span class="hljs-string">&#x27;mentalHealth&#x27;</span>],<br>        <span class="hljs-string">&quot;wayToSchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;wayToSchool&#x27;</span>],<br>        <span class="hljs-string">&quot;backToSchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;backToSchool&#x27;</span>],<br>        <span class="hljs-string">&quot;haveBroadband&quot;</span>: post_dict[<span class="hljs-string">&#x27;haveBroadband&#x27;</span>],<br>        <span class="hljs-string">&quot;emergencyContactName&quot;</span>: post_dict[<span class="hljs-string">&#x27;emergencyContactName&#x27;</span>],<br>        <span class="hljs-string">&quot;helpInfo&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;passingCity&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;longitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;latitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token,<br>    &#125;<br>    headers = &#123;<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">f&#x27;https://reportedh5.17wanxiao.com/nCovReport/index.html?token=<span class="hljs-subst">&#123;token&#125;</span>&amp;customerId=<span class="hljs-subst">&#123;custom_id&#125;</span>&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/reported/receive&quot;</span>, headers=headers, data=check_json).json()<br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-comment"># print(res)</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">0</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;打卡请求出错，网络不稳定&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h2 id="三、使用方法（已修复，也可使用-腾讯云函数版-）"><a href="#三、使用方法（已修复，也可使用-腾讯云函数版-）" class="headerlink" title="三、使用方法（已修复，也可使用 腾讯云函数版 ）"></a>三、使用方法（已修复，也可使用 <a href="https://reajason.top/2021/01/17/17wanxiaoCheckin-SCF/">腾讯云函数版</a> ）</h2><ol><li><p>请先确保在<strong>完美校园 APP</strong>中进入健康打卡界面，信息能够正确的自动填写，并手动打一次卡（只能是 app，小程序不行！）（没有自动填写的项，可以自行修改代码）</p></li><li><p>点击右上角的 <code>fork</code>，<code>fork</code> 本项目到自己仓库中</p></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/click_fork.png"></p><ol start="3"><li>开启 <code>Actions</code></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/start_action.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_actions.png"></p><ol start="4"><li><p>设置三个 <code>secrets</code>  字段：<code>USERNAME</code>、<code>PASSWORD</code>、<code>SCKEY</code>（对应就是账号，密码以及 Server 酱）</p><ol><li>如果是多人打卡的话：<ul><li>USERNAME字段：手机号1,手机号2,……（与下面密码对应），例如：<code>1737782***,13602***</code></li><li>PASSWORD字段：密码1,密码2,……  （与上面账号对应），例如：<code>123456,456789</code></li><li>SCKEY字段：填写一个即可，例如：<code>SCU90543*******</code>，没有请前往 <a href="https://sc.ftqq.com/3.version">Server酱</a> 注册获取</li></ul></li></ol></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/new_secrets.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/secrets_details.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_secrets.png"></p><ol start="5"><li>修改 <code>README.md</code> 选第一个就好，不要选第二个Create a new branch***（为什么教着做都不听话，泪目），测试一次</li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/modify_readme.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_modify.png"></p><ol start="6"><li>查看 <code>Actions</code> 运行情况，以及微信推送情况，<strong>至此每日六点多将会自行打卡</strong></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/check_status.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_check.png"></p><h2 id="四、Q-amp-A"><a href="#四、Q-amp-A" class="headerlink" title="四、Q&amp;A"></a>四、Q&amp;A</h2><h3 id="1、fork之后，修改README-md并没有触发actions？"><a href="#1、fork之后，修改README-md并没有触发actions？" class="headerlink" title="1、fork之后，修改README.md并没有触发actions？"></a>1、fork之后，修改README.md并没有触发actions？</h3><p>请进入 Actions，Enable workflow</p><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/enable.png" alt="enable"></p><h3 id="2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？"><a href="#2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？" class="headerlink" title="2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？"></a>2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？</h3><p>进入 <code>.github/workflows/run.yml </code>修改时间，请不要搁那掐着秒算程序运行，你设置好了，明天就一定能好好运行，Giuhub Actions大概会有10~20分钟的延迟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">这里的cron就是脚本运行时间，22,4,9对应的时间是UTC时，对应北京时间早上六点，中午十二点，下午五点</span><br><span class="hljs-string">详细对应关系请查看：http://timebie.com/cn/universalbeijing.php</span><br><span class="hljs-string"></span><br><span class="hljs-string">只有健康打卡的小伙伴可以只留着22就可以了，这样其余两个时间就不会打卡</span><br><span class="hljs-string">如果害怕程序报错导致上午健康打卡没打，可设置6点和7点各运行一次即：0 22,23 * * *</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>on:<br>  push:<br>    branches: [ master ]<br>  pull_request:<br>    branches: [ master ]<br>  schedule:<br>    - cron: <span class="hljs-number">0</span> <span class="hljs-number">22</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span> * * *<br></code></pre></td></tr></table></figure><h3 id="3、程序报错显示密码错误，还有-次机会？"><a href="#3、程序报错显示密码错误，还有-次机会？" class="headerlink" title="3、程序报错显示密码错误，还有 * 次机会？"></a>3、程序报错显示密码错误，还有 * 次机会？</h3><p>请立马修改 secrets 的密码再尝试运行</p><h3 id="4、健康打卡问题汇总请前往-wiki"><a href="#4、健康打卡问题汇总请前往-wiki" class="headerlink" title="4、健康打卡问题汇总请前往 wiki"></a>4、健康打卡问题汇总请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki#%E5%81%A5%E5%BA%B7%E6%89%93%E5%8D%A1%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB">wiki</a></h3><h3 id="5、校内打卡问题汇总请前往-wiki"><a href="#5、校内打卡问题汇总请前往-wiki" class="headerlink" title="5、校内打卡问题汇总请前往 wiki"></a>5、校内打卡问题汇总请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki#%E6%A0%A1%E5%86%85%E6%89%93%E5%8D%A1%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB">wiki</a></h3>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
