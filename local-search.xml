<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微博超话签到工具</title>
    <link href="/2021/02/04/WBTopicCheckTool/"/>
    <url>/2021/02/04/WBTopicCheckTool/</url>
    
    <content type="html"><![CDATA[<blockquote><p>再也不玩辣鸡微博了，爬虫爬得恶心人，热搜也恶心人，本工具接口全来自微博网页版，仅作封装和打包实现</p><a id="more"></a></blockquote><div class="note note-success">            <p>项目地址：<a href="https://github.com/ReaJason/WBTopicCheckTool">https://github.com/ReaJason/WBTopicCheckTool</a></p>          </div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于之前的很多接口作废了，暂时也不想花时间在这上面了，之前也挖了点坑，这个写出来算是给之前 <a href="https://github.com/ReaJason/WeiBo_SuperTopics">WeiBo_SuperTopics</a> 一个交代，简单的用 PyQt5 封装了微博网页版的扫码登陆以及签到请求，想要学习的小伙伴可以下载源码进行学习。</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ol><li>Windows 10</li><li>Python 3.7.9</li><li>requests==2.25.1，PyQt5==5.15.1</li></ol><h2 id="界面截图"><a href="#界面截图" class="headerlink" title="界面截图"></a>界面截图</h2><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/WBTopicCheckTool/res/home.png" alt="home"></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/WBTopicCheckTool/res/scan_login.png" alt="scan_login"></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/WBTopicCheckTool/res/login_success.png" alt="login_success"></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/WBTopicCheckTool/res/check_in.png" alt="check_in.png"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>下载源码之后，先安装第三方库<code>pip install -r requirements.txt</code>，再使用 <code>python start.py</code>启动程序</li><li>程序打包命令，<code>pyinstaller -F -w -i ./res/favicon.ico start.py</code>，然后将<code>res</code>目录复制到 <code>dist</code>目录</li><li>扫码登录成功之后会自动获取超话列表，获取失败，刷新超话重新获取即可</li><li>超话数量越多，签到间隔建议设置大一点，以防请求异常</li><li>若无法使用本程序，请检查自己账号是否异常，不要拿异常账号反馈</li><li>本程序只供参考学习，请勿用于违法用途</li><li>使用本程序导致微博账号异常或冻结甚至封禁都与作者无关</li><li>凡以任何方式下载使用本程序者，视为自愿接受本声明约束。</li></ol><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p>​     <a href="https://lingsiki.lanzous.com/b0eke1lof">https://lingsiki.lanzous.com/b0eke1lof</a> 密码: 3d8a</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PyQt5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux学习笔记（学习中...）</title>
    <link href="/2021/01/18/LinuxLearning/"/>
    <url>/2021/01/18/LinuxLearning/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Linux 运维，听上去就很牛逼，之前也前后前后差不多学过四五次 Linux 了，不过每次坚持不了多久，这次放假争取好好学一下，毕竟服务器便宜一点的就 Linux 服务器了，以后自己写软件接口什么的就靠这个了</p><a id="more"></a></blockquote><div class="note note-primary">            <p>Flag：争取每天学个两三个小时，写写博客</p>          </div><h2 id="学习环境"><a href="#学习环境" class="headerlink" title="学习环境"></a>学习环境</h2><ol><li><a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe">VMware-workstation-full-16.0.0-16894299.exe</a></li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-Everything-2009.iso">CentOS-7-x86_64-Everything-2009.iso</a></li><li><a href="https://cloud.189.cn/t/U7vURjZfmiMr">Xftp-7.0.0054p.exe</a></li><li><a href="https://cloud.189.cn/t/bqIfei3eeyui">Xshell-7.0.0054p.exe</a></li><li><a href="https://www.bilibili.com/video/BV12E411K79p">马哥Linux高端运维顶级云计算就业课程网络班37期</a></li></ol><h3 id="Xshell-连接-Centos7"><a href="#Xshell-连接-Centos7" class="headerlink" title="Xshell 连接 Centos7"></a>Xshell 连接 Centos7</h3><p>首先在 Linux 虚拟机打开终端，查看 ip 以及将防火墙关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1、查看系统是否监听于tcp协议的22号端口</span><br>ss -tnl<br><br><span class="hljs-comment"># 2、查看ip地址</span><br>ifconfig<br><span class="hljs-comment"># ifconfig command not found，则安装net-tools</span><br>yum install net-tools<br><span class="hljs-comment"># ip addr list同样可以查看ip地址</span><br>ip addr list<br><br><span class="hljs-comment"># 3、确保防火墙处于关闭状态</span><br>iptables -L -n<br>systemctl <span class="hljs-built_in">disable</span> firewalld.service<br>systemctl stop firewalld.service<br></code></pre></td></tr></table></figure><p>然后打开 xshell 连接 Linux 虚拟机</p><h2 id="Linux系统了解"><a href="#Linux系统了解" class="headerlink" title="Linux系统了解"></a>Linux系统了解</h2><h3 id="终端设备：terminal"><a href="#终端设备：terminal" class="headerlink" title="终端设备：terminal"></a>终端设备：terminal</h3><ul><li>物理终端，也称控制台：console</li><li>虚拟终端：tty</li><li>图形终端</li><li>串行终端：ttyS</li><li>伪终端：pty</li></ul><h3 id="命令行接口：CLI"><a href="#命令行接口：CLI" class="headerlink" title="命令行接口：CLI"></a>命令行接口：CLI</h3><p><code>[root@localhost ~]# </code></p><ul><li>root：当前用户名称</li><li>localhost：当前主机名</li><li>~：用户当前所在目录（current directory），也称工作目录（working directory）</li><li>#：命令提示符，# 为管理员账号，$ 为普通用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看终端设备</span><br>tty<br><br><span class="hljs-comment"># 查看接口程序</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span><br></code></pre></td></tr></table></figure><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p><code>/dev/pts/0</code></p><ul><li>最左侧 / 表示根目录</li><li>其余 / 表示为文件分隔符，Linux 文件分隔符为 / ，Windows 文件分隔符为 \ </li><li>文件名支持使用除 / 以外的任意字符，最长不能超过 255 个字符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 获取文件路径的基名basename</span><br>basename /etc/sysconfig/network-scripts/ifcfg-ens33<br>ifcfg-ens33<br><br><span class="hljs-comment"># 获取文件路径的目录名dirname</span><br>dirname /etc/sysconfig/network-scripts/ifcfg-ens33<br>/etc/sysconfig/network-scripts<br></code></pre></td></tr></table></figure><h2 id="Linux基础知识"><a href="#Linux基础知识" class="headerlink" title="Linux基础知识"></a>Linux基础知识</h2><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>语法通用格式：<code># COMMAND OPTIONS ARGUMENTS</code></p><h4 id="COMMAND"><a href="#COMMAND" class="headerlink" title="COMMAND"></a>COMMAND</h4><p>发起一个命令，请求内核将某个二进制程序运行为一个进程，命令本身就是一个可执行的程序文件，二进制格式的文件（ELF 格式），有可能调用共享库文件。命令分为两种，一种是由 shell 程序自带的命令，成为内置命令，另一种则是独立的可执行文件，文件名即为命令名，称为外部命令。shell 程序是独特的程序，负责解析用户提供的命令，查询通过环境变量，从左到右依次查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件信息</span><br>file /bin/ls<br><br><span class="hljs-comment"># 查看环境变量</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment"># 查看命令类型</span><br><span class="hljs-built_in">type</span> COMMAND<br></code></pre></td></tr></table></figure><h4 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h4><p>用来指定命令的运行特性，选项分为短选项和长选项两种，短选项如<code>-l</code> 、<code>-d</code>，有些命令选项没有<code>-</code> ，多数可合并，<code>-l -d</code>可合并为<code>-ld</code> ，长选项如<code>--help</code>，长选项不能合并，有些选项可以带参数称为选项参数。</p><h4 id="ARGUMENTS"><a href="#ARGUMENTS" class="headerlink" title="ARGUMENTS"></a>ARGUMENTS</h4><p>表示命令的作用对象，即命令对什么生效，多个命令参数之间以空白字符分隔，如<code>ls -ld /var /etc</code>。</p><h3 id="获取命令帮助"><a href="#获取命令帮助" class="headerlink" title="获取命令帮助"></a>获取命令帮助</h3><h4 id="内部命令"><a href="#内部命令" class="headerlink" title="内部命令"></a>内部命令</h4><p><code>help COMMAND</code></p><h4 id="外部命令"><a href="#外部命令" class="headerlink" title="外部命令"></a>外部命令</h4><ul><li>命令自带简要格式的使用帮助，<code>COMMAND --help</code></li><li>使用手册获取帮助，<code>man COMMAND</code>，使用手册位置：<code>/usr/share/man</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用各章节的命令不同</span><br>man1：用户命令；<br>man2：系统调用；<br>man3：C库调用；<br>man4：设备文件及特殊文件；<br>man5：文件格式；（配置文件格式）<br>man6：游戏使用帮助；<br>man7：杂项；<br>man8：管理工具及守护进行；<br><br><span class="hljs-comment"># 查看COMMAND在哪些手册出现过</span><br>whatis COMMAND<br><br><span class="hljs-comment"># 手动更新查询数据库</span><br>makewhatis<br></code></pre></td></tr></table></figure><ul><li>阅读手册快捷键<ul><li><code>空格</code>：先后翻一屏</li><li><code>b</code>：向前翻一屏</li><li><code>Ctrl+d</code>：向后翻半屏</li><li><code>Ctrl+u</code>：向前翻半屏</li><li><code>回车</code>：向后翻一行</li><li><code>k</code>：向前翻一行</li><li><code>G</code>：跳转至最后一行</li><li><code>g</code>：跳转到第一行</li><li><code>nG</code>：跳转至第n行</li><li><code>/keyword</code>：从前往后找，不区分大小写，<code>n</code>：往后翻</li><li><code>?keyword</code>：从后往前找，<code>n</code>：往前翻，<code>N</code>：往后翻</li><li><code>-M /PATH/TO/SOMEDIR</code>：到指定目录下查找命令手册并打开之</li><li><code>q</code>：退出手册</li></ul></li></ul><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><h4 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># printing working directory</span><br>[root@localhost ~]<span class="hljs-comment"># pwd</span><br>/root<br></code></pre></td></tr></table></figure><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># change directory</span><br><br><span class="hljs-comment"># 切换回家目录，bash中，~表示家目录</span><br><span class="hljs-built_in">cd</span><br><span class="hljs-built_in">cd</span> ~<br><br><span class="hljs-comment"># 切换回上一次所在目录</span><br><span class="hljs-built_in">cd</span> -<br><br><span class="hljs-comment"># 相关环境变量，$PWD $OLDPWD，.代表当前目录，..代表上一级目录</span><br>[root@localhost ~]<span class="hljs-comment"># cd /etc/sysconfig</span><br>[root@localhost sysconfig]<span class="hljs-comment"># cd .</span><br>[root@localhost sysconfig]<span class="hljs-comment"># cd ..</span><br>[root@localhost etc]<span class="hljs-comment"># cd -</span><br>/etc/sysconfig<br></code></pre></td></tr></table></figure><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><p>文件详细属性：<code>drwxr-xr-x. 2 root   root      204 1月  18 11:20 anaconda</code></p><p><code>d</code>：表示文件类型，<code>-</code>，<code>d</code>，<code>b</code>，<code>c</code>，<code>l</code>，<code>s</code>，<code>p</code></p><p><code>rwxr-xr-x</code>：权限信息</p><p><code>rwx</code>：文件属主的权限</p><p><code>r-x</code>：文件数组的权限</p><p><code>r-x</code>：其他用户（非属主、属组）的权限</p><p><code>.</code>：表示该文件为隐藏文件</p><p><code>2</code>：数字表示文件被硬链接的次数</p><p><code>root</code>：文件的属主</p><p><code>root</code>：文件的属组</p><p><code>204 </code>：表示文件的大小，单位为字节</p><p><code>1月  18 11:20</code>：文件最近一次被修改的时间</p><p><code>anaconda</code>：文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># list，列出指定目录下的内容，ls [OPTION]... [FILE]...</span><br><span class="hljs-comment"># -a：显示所有文件，包括隐藏文件；</span><br>[root@localhost ~]<span class="hljs-comment"># ls -a /var/log</span><br>.         boot.log-20210119  firewalld           rhsm      vmware-network.1.log    vmware-vmtoolsd-root.log<br>..        btmp               grubby_prune_debug  secure    vmware-network.2.log    wtmp<br>anaconda  chrony             lastlog             spooler   vmware-network.log      yum.log<br>audit     cron               maillog             tallylog  vmware-vgauthsvc.log.0<br>boot.log  dmesg              messages            tuned     vmware-vmsvc-root.log<br><br><span class="hljs-comment"># -A:显示除.和..之外的所有文件</span><br>[root@localhost ~]<span class="hljs-comment"># ls -A /var/log</span><br>anaconda           btmp    firewalld           messages  tallylog              vmware-network.log        wtmp<br>audit              chrony  grubby_prune_debug  rhsm      tuned                 vmware-vgauthsvc.log.0    yum.log<br>boot.log           cron    lastlog             secure    vmware-network.1.log  vmware-vmsvc-root.log<br>boot.log-20210119  dmesg   maillog             spooler   vmware-network.2.log  vmware-vmtoolsd-root.log<br><br><span class="hljs-comment"># -l,--long：长格式列表，即显示文件的详细属性</span><br>[root@localhost ~]<span class="hljs-comment"># ls -l /var/log</span><br>总用量 1040<br>drwxr-xr-x. 2 root   root      204 1月  18 11:20 anaconda<br>drwx------. 2 root   root       23 1月  18 11:21 audit<br>-rw-------. 1 root   root        0 1月  19 17:46 boot.log<br><br><br><span class="hljs-comment"># -h,--human-readable：对文件大小单位进行换算显示，换算之后并不精确</span><br>[root@localhost ~]<span class="hljs-comment"># ls -lh /var/log</span><br>总用量 1.1M<br>drwxr-xr-x. 2 root   root    204 1月  18 11:20 anaconda<br>drwx------. 2 root   root     23 1月  18 11:21 audit<br>-rw-------. 1 root   root      0 1月  19 17:46 boot.log<br><br><br><span class="hljs-comment"># -d：查看目录自身而非其内部的文件列表，通常与l连用</span><br>[root@localhost ~]<span class="hljs-comment"># ls -ld /var/log</span><br>drwxr-xr-x. 7 root root 4096 1月  19 17:46 /var/<span class="hljs-built_in">log</span><br><br><span class="hljs-comment"># -r：revrese，逆序显示</span><br><span class="hljs-comment"># -R：recursive，递归显示</span><br></code></pre></td></tr></table></figure><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat concatenate，文本文件查看工具，[OPTION]... [FILE]...</span><br><span class="hljs-comment"># -n：显示文本行编号</span><br>[root@localhost ~]<span class="hljs-comment"># cat -n /etc/issue</span><br>     1\S<br>     2Kernel \r on an \m<br>     3<br><br><span class="hljs-comment"># -E：显示行结束符</span><br>[root@localhost ~]<span class="hljs-comment"># cat -E /etc/issue</span><br>\S$<br>Kernel \r on an \m$<br>$<br></code></pre></td></tr></table></figure><h4 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 与cat反过来，逆序打印文件内容</span><br><br>[root@localhost ~]<span class="hljs-comment"># cat /etc/passwd</span><br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>sync:x:5:0:sync:/sbin:/bin/sync<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br>polkitd:x:999:998:User <span class="hljs-keyword">for</span> polkitd:/:/sbin/nologin<br>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin<br>postfix:x:89:89::/var/spool/postfix:/sbin/nologin<br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br><br><br>[root@localhost ~]<span class="hljs-comment"># tac /etc/passwd</span><br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br>postfix:x:89:89::/var/spool/postfix:/sbin/nologin<br>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin<br>polkitd:x:999:998:User <span class="hljs-keyword">for</span> polkitd:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>sync:x:5:0:sync:/sbin:/bin/sync<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>root:x:0:0:root:/root:/bin/bash<br></code></pre></td></tr></table></figure><h4 id="file"><a href="#file" class="headerlink" title="file"></a>file</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件内容类型</span><br>[root@localhost ~]<span class="hljs-comment"># file /etc/fstab</span><br>/etc/fstab: ASCII text<br></code></pre></td></tr></table></figure><h4 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 回显</span><br>[root@localhost ~]<span class="hljs-comment"># echo &#x27;hello world&#x27;</span><br>hello world<br><br><span class="hljs-comment"># -n：不自动进行换行</span><br>[root@localhost ~]<span class="hljs-comment"># echo -n &#x27;hello world&#x27;</span><br>hello world[root@localhost ~]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># -e：让转义符生效</span><br>[root@localhost ~]<span class="hljs-comment"># echo -e &#x27;hello \n world&#x27;</span><br>hello <br> world<br><br><span class="hljs-comment"># 单引号：强引用，变量引用不执行替换</span><br>[root@localhost ~]<span class="hljs-comment"># echo &#x27;$SHELL&#x27;</span><br><span class="hljs-variable">$SHELL</span><br><br><span class="hljs-comment"># 双引号：弱引用，变量引用会被替换</span><br>[root@localhost ~]<span class="hljs-comment"># echo &quot;$SHELL&quot;</span><br>/bin/bash<br><br><span class="hljs-comment"># 变量引用的正规符号：$&#123;name&#125;</span><br>[root@localhost ~]<span class="hljs-comment"># echo $&#123;SHELL&#125;</span><br>/bin/bash<br></code></pre></td></tr></table></figure><h4 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 关机或重启命令，shutdown [OPTIONS...] [TIME] [WALL...]</span><br><br><span class="hljs-comment"># OPTIONS: -h：关机，-r：重启，-c：取消操作</span><br><span class="hljs-comment"># TIME：now，hh:mm，+m</span><br><span class="hljs-comment"># WALL：即为广播发送的消息</span><br><br><span class="hljs-comment"># 5分钟后重启</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -r +5</span><br>Shutdown scheduled <span class="hljs-keyword">for</span> 二 2021-01-19 22:26:29 CST, use <span class="hljs-string">&#x27;shutdown -c&#x27;</span> to cancel.<br>[root@localhost ~]<span class="hljs-comment"># </span><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:21:29 CST):<br><br>The system is going down <span class="hljs-keyword">for</span> reboot at Tue 2021-01-19 22:26:29 CST!<br><br><span class="hljs-comment"># 取消计划重启操作</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -c</span><br><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:22:04 CST):<br><br>The system shutdown has been cancelled at Tue 2021-01-19 22:23:04 CST!<br><br><span class="hljs-comment"># 广播&quot;Hello Everyone，I wanna reboot at 10m later&quot;，并设置10分钟后重启</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -r +10 &quot;Hello Everyone，I wanna reboot at 10m later&quot;</span><br>Shutdown scheduled <span class="hljs-keyword">for</span> 二 2021-01-19 22:33:31 CST, use <span class="hljs-string">&#x27;shutdown -c&#x27;</span> to cancel.<br>[root@localhost ~]<span class="hljs-comment"># </span><br>Broadcast message from root@localhost.localdomain (Tue 2021-01-19 22:23:31 CST):<br><br>Hello Everyone，I wanna reboot at 10m later<br>The system is going down <span class="hljs-keyword">for</span> reboot at Tue 2021-01-19 22:33:31 CST!<br><br><span class="hljs-comment"># 关机</span><br>[root@localhost ~]<span class="hljs-comment"># shutdown -h now</span><br>Connection closing...Socket close.<br><br>Connection closed by foreign host.<br><br>Disconnected from remote host(centos7) at 22:24:19.<br><br></code></pre></td></tr></table></figure><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示系统时间，date [OPTION]... [+FORMAT]</span><br><span class="hljs-comment"># 设置系统时间，date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]</span><br><br><span class="hljs-comment"># 显示当前时间</span><br>[root@localhost ~]<span class="hljs-comment"># date</span><br>2021年 01月 22日 星期五 13:35:27 CST<br><br><span class="hljs-comment"># 时间格式输出</span><br>[root@localhost ~]<span class="hljs-comment"># date +&quot;%Y-%m-%d %H:%M:%S&quot;</span><br>2021-01-22 13:43:32<br>[root@localhost ~]<span class="hljs-comment"># date +%F</span><br>2021-01-22<br>[root@localhost ~]<span class="hljs-comment"># date +%T</span><br>13:37:57<br>[root@localhost ~]<span class="hljs-comment"># date +&quot;%F %T&quot;</span><br>2021-01-22 13:38:57<br>[root@localhost ~]<span class="hljs-comment"># date +%s</span><br>1611294293<br></code></pre></td></tr></table></figure><h4 id="clock，hwclock"><a href="#clock，hwclock" class="headerlink" title="clock，hwclock"></a>clock，hwclock</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示或设置硬件时钟</span><br><span class="hljs-comment"># -s，--hctosys，将系统时间改为硬件时间</span><br><span class="hljs-comment"># -w，--systohc，将硬件时间改为系统时间</span><br></code></pre></td></tr></table></figure><h4 id="cal"><a href="#cal" class="headerlink" title="cal"></a>cal</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 日历</span><br><span class="hljs-comment"># cal [options] [[[day] month] year]</span><br>[root@localhost ~]<span class="hljs-comment"># cal 1 2021</span><br>      一月 2021     <br>日 一 二 三 四 五 六<br>                1  2<br> 3  4  5  6  7  8  9<br>10 11 12 13 14 15 16<br>17 18 19 20 21 22 23<br>24 25 26 27 28 29 30<br>31<br><br>[root@localhost ~]<span class="hljs-comment"># cal 2021</span><br>                               2021                               <br><br>        一月                   二月                   三月        <br>日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六<br>                1  2       1  2  3  4  5  6       1  2  3  4  5  6<br> 3  4  5  6  7  8  9    7  8  9 10 11 12 13    7  8  9 10 11 12 13<br>10 11 12 13 14 15 16   14 15 16 17 18 19 20   14 15 16 17 18 19 20<br>17 18 19 20 21 22 23   21 22 23 24 25 26 27   21 22 23 24 25 26 27<br>24 25 26 27 28 29 30   28                     28 29 30 31<br>31<br>        四月                   五月                   六月        <br>日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六<br>             1  2  3                      1          1  2  3  4  5<br> 4  5  6  7  8  9 10    2  3  4  5  6  7  8    6  7  8  9 10 11 12<br>11 12 13 14 15 16 17    9 10 11 12 13 14 15   13 14 15 16 17 18 19<br>18 19 20 21 22 23 24   16 17 18 19 20 21 22   20 21 22 23 24 25 26<br>25 26 27 28 29 30      23 24 25 26 27 28 29   27 28 29 30<br>                       30 31<br>        七月                   八月                   九月        <br>日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六<br>             1  2  3    1  2  3  4  5  6  7             1  2  3  4<br> 4  5  6  7  8  9 10    8  9 10 11 12 13 14    5  6  7  8  9 10 11<br>11 12 13 14 15 16 17   15 16 17 18 19 20 21   12 13 14 15 16 17 18<br>18 19 20 21 22 23 24   22 23 24 25 26 27 28   19 20 21 22 23 24 25<br>25 26 27 28 29 30 31   29 30 31               26 27 28 29 30<br><br>        十月                  十一月                 十二月       <br>日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六<br>                1  2       1  2  3  4  5  6             1  2  3  4<br> 3  4  5  6  7  8  9    7  8  9 10 11 12 13    5  6  7  8  9 10 11<br>10 11 12 13 14 15 16   14 15 16 17 18 19 20   12 13 14 15 16 17 18<br>17 18 19 20 21 22 23   21 22 23 24 25 26 27   19 20 21 22 23 24 25<br>24 25 26 27 28 29 30   28 29 30               26 27 28 29 30 31<br>31<br><br></code></pre></td></tr></table></figure><h4 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 若使用原命令可用 \COMMAND</span><br><span class="hljs-comment"># 获取所有可用别名的定义</span><br>[root@localhost ~]<span class="hljs-comment"># alias</span><br><span class="hljs-built_in">alias</span> cp=<span class="hljs-string">&#x27;cp -i&#x27;</span><br><span class="hljs-built_in">alias</span> egrep=<span class="hljs-string">&#x27;egrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> fgrep=<span class="hljs-string">&#x27;fgrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> grep=<span class="hljs-string">&#x27;grep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> l.=<span class="hljs-string">&#x27;ls -d .* --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -l --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> ls=<span class="hljs-string">&#x27;ls --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> mv=<span class="hljs-string">&#x27;mv -i&#x27;</span><br><span class="hljs-built_in">alias</span> rm=<span class="hljs-string">&#x27;rm -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">which</span>=<span class="hljs-string">&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br><br><span class="hljs-comment"># 设置别名，alias NAME=COMMAND，只对当前 shell 进程有效</span><br><span class="hljs-built_in">alias</span> cls=clean<br><br><span class="hljs-comment"># 取消别名，unalias NAME</span><br><span class="hljs-built_in">unalias</span> cls<br></code></pre></td></tr></table></figure><h4 id="which"><a href="#which" class="headerlink" title="which"></a>which</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># shows the full path of (shell) commands</span><br>[root@localhost ~]<span class="hljs-comment"># which ls</span><br><span class="hljs-built_in">alias</span> ls=<span class="hljs-string">&#x27;ls --color=auto&#x27;</span><br>/usr/bin/ls<br><br><span class="hljs-comment"># 使用which原命令</span><br>[root@localhost ~]<span class="hljs-comment"># \which ls</span><br>/usr/bin/ls<br><br></code></pre></td></tr></table></figure><h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># locate the binary, source, and manual page files for a command</span><br>[root@localhost ~]<span class="hljs-comment"># whereis ls</span><br>ls: /usr/bin/ls /usr/share/man/man1/ls.1.gz<br><br><span class="hljs-comment"># -b，只查看二进制程序路径</span><br>[root@localhost ~]<span class="hljs-comment"># whereis -b ls</span><br>ls: /usr/bin/ls<br><br><span class="hljs-comment"># -m，只查看使用手册文件路径</span><br>[root@localhost ~]<span class="hljs-comment"># whereis -m ls</span><br>ls: /usr/share/man/man1/ls.1.gz<br></code></pre></td></tr></table></figure><h4 id="who"><a href="#who" class="headerlink" title="who"></a>who</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># show who is logged on</span><br>[root@localhost ~]<span class="hljs-comment"># who</span><br>root     tty1         2021-01-21 18:05<br>root     pts/0        2021-01-23 14:43 (192.168.1.105)<br>root     pts/1        2021-01-23 15:43 (192.168.1.105)<br><br><span class="hljs-comment"># -b，系统此次启动时间</span><br>[root@localhost ~]<span class="hljs-comment"># who -b</span><br>         系统引导 2021-01-21 18:04<br><br><span class="hljs-comment"># -r，运行级别</span><br>[root@localhost ~]<span class="hljs-comment"># who -r</span><br>         运行级别 3 2021-01-21 18:05<br></code></pre></td></tr></table></figure><h4 id="w"><a href="#w" class="headerlink" title="w"></a>w</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Show who is logged on and what they are doing</span><br>[root@localhost ~]<span class="hljs-comment"># w</span><br> 16:18:47 up 18:58,  3 users,  load average: 0.05, 0.03, 0.05<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>root     tty1                      四18    1:35m  0.03s  0.03s -bash<br>root     pts/0    192.168.1.105    14:43    7.00s  0.06s  0.04s w<br>root     pts/1    192.168.1.105    15:43   23.00s  0.01s  0.00s less -s<br></code></pre></td></tr></table></figure><h3 id="根目录系统"><a href="#根目录系统" class="headerlink" title="根目录系统"></a>根目录系统</h3><h4 id="文件层级结构：FHS"><a href="#文件层级结构：FHS" class="headerlink" title="文件层级结构：FHS"></a>文件层级结构：FHS</h4><p><code>Filesystem Hierarchy Standard</code></p><ul><li><code>/bin</code> ：所有用户可用的基本命令程序文件</li><li><code>/sbin</code>：供系统管理使用的工具程序</li><li><code>/boot</code>：引导加载器必须用到的各静态文件</li><li><code>/dev</code>：存储特殊文件或设备文件</li><li><code>/etc</code>：系统程序的配置文件，只能为静态</li><li><code>/home</code>：普通用户家目录，一般为<code>/home/USERNAME</code></li><li><code>/root</code>：管理员家目录</li><li><code>/lib</code>：为系统启动或根文件系统上的应用程序（/bin，/sbin等）提供共享库，以及为内核提供内核模块<ul><li><code>./libc.so.*</code>：动态链接的C库</li><li><code>./ld*</code>：运行时链接器/加载器</li><li><code>./modules</code>：用于存储内核模块的目录</li></ul></li><li><code>/lib64</code>：64位系统特有的存放64位共享库的路径</li><li><code>/media</code>：便携式设备挂载点，cdrom, floppy等</li><li><code>/mnt</code>：其它文件系统的临时挂载点</li><li><code>/opt</code>：附加应用程序的安装位置（可选路径）</li><li><code>/srv</code>：当前主机为服务提供的数据</li><li><code>/tmp</code>：为产生临时文件的程序提供用于存储临时文件的目录，可供所有用户执行写入操作，有特殊权限</li><li><code>/usr</code>：<code>usr Hierarchy</code>，全局共享的只读数据路径<ul><li><code>./bin、./sbin</code></li><li><code>./lib、./lib64</code></li><li><code>./include</code>：C程序头文件</li><li><code>./share</code>：命令手册页和自带文档等架构特有的文件的存储位置</li><li><code>./local</code>：让系统管理员安装本地应用程序；也通常用于安装第三方程序</li><li><code>./X11R6</code>：X-Window 程序的安装位置</li><li><code>./src</code>：程序源码文件的存储位置</li></ul></li><li><code>/var</code>：存储发生变化的数据的目录<ul><li><code>./cache</code>：Application cache data</li><li><code>./lib</code>：Variable state information</li><li><code>./local</code>：Variable data for /usr/local</li><li><code>./lock</code>：Lock files</li><li><code>./log</code>：Log files and directories</li><li><code>./opt</code>：Variable data for /opt</li><li><code>./run</code>：Data relevant to running processes</li><li><code>./spool</code>：Application spool data</li><li><code>./tmp</code>：Temporary files preserved between system reboots    </li></ul></li><li><code>/proc</code>：基于内存的虚拟文件系统，用于为内核及进程存储其相关信息，它们多为内核参数，例如<code>net.ipv4.ip_forward</code>， 虚拟为<code>net/ipv4/ip_forward</code>，存储于<code>/proc/sys/</code>，因此其完整路径为<code>/proc/sys/net/ipv4/ip_forward</code></li><li><code>/sys</code>：sysfs 虚拟文件系统提供了一种比 proc 更为理想的访问内核数据的途径，其主要作用在于为管理 Linux 设备提供一种统一模型的的接口</li></ul><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><ul><li><code>-</code>：常规文件 file</li><li><code>d</code>：directory，目录文件</li><li><code>b</code>：block device，块设备文件，支持以<code>block</code>为单位进行随机访问</li><li><code>c</code>：character device，字符设备文件<ul><li><code>major number</code>：主设备号，用于标识设备类型，进而确定要加载的驱动程序</li><li><code>minor number</code>：次设备号，用于标识同一类型中的不同设备</li></ul></li><li><code>symbolic link</code>：符号链接文件</li><li><code>pipe</code>：命名管道</li><li><code>socket</code>：套接字文件</li></ul><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><h4 id="命令历史"><a href="#命令历史" class="headerlink" title="命令历史"></a>命令历史</h4><p>shell 进程会将其会话中保存此前用户提交执行过的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># history</span><br>[root@localhost ~]<span class="hljs-comment"># history</span><br>    1  ll /dev<br>    2  ech <span class="hljs-variable">$SHELL</span><br>    3  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span><br>    4  <span class="hljs-built_in">pwd</span><br>    5  <span class="hljs-built_in">history</span><br><br><span class="hljs-comment"># $HISTSIZE，shell 进程可保留的命令历史的条数</span><br>[root@localhost ~]<span class="hljs-comment"># echo $HISTSIZE</span><br>1000<br><br><span class="hljs-comment"># $HISTFILE，持久保存命令历史的文件</span><br>[root@localhost ~]<span class="hljs-comment"># echo $HISTFILE</span><br>/root/.bash_history<br><br><span class="hljs-comment"># -c，删除所有条目从而清空历史列表</span><br>[root@localhost ~]<span class="hljs-comment"># history -c</span><br>[root@localhost ~]<span class="hljs-comment"># history</span><br>    1  <span class="hljs-built_in">history</span><br><br><span class="hljs-comment"># -d offset，删除指定命令历史</span><br><span class="hljs-comment"># -r，从文件读取命令历史到历史列表中</span><br><span class="hljs-comment"># -w，把历史列表中的命令追加到历史文件中</span><br><span class="hljs-comment"># history n，显示最近 n 条命令</span><br><span class="hljs-comment"># !n，再一次执行历史列表中的第 n 条命令</span><br><span class="hljs-comment"># !!，再一次执行上一条命令</span><br><span class="hljs-comment"># !x，再一次执行命令历史列表中最近一个以 x 开头的命令</span><br><span class="hljs-comment"># esc + . ，调用上一条命令的最后一个参数</span><br><span class="hljs-comment"># !$，表示上一条命令的最后一个参数</span><br><span class="hljs-comment"># $HISTCONTROL，ignoredups：忽略重复性，ignorespace：忽略以空白字符开头的命令，ignoreboth：两者</span><br>[root@localhost ~]<span class="hljs-comment"># echo $HISTCONTROL</span><br>ignoredups<br></code></pre></td></tr></table></figure><h4 id="命令补全"><a href="#命令补全" class="headerlink" title="命令补全"></a>命令补全</h4><p>shell 程序在接收到命令用户执行命令的请求，分析完成之后，最左侧的字符串会被当成命令</p><p>命令查找机制：查找内部命令，根据 PATH 环境变量中设定的命令，自左而右逐个搜索目录下的文件名</p><p>输入给定的打头字符串，如果唯一标识命令按 <code>Tab</code>则自动补全，如果不唯一，则按两次 <code>Tab</code> 键能显示所有打头列表</p><h4 id="路径补全"><a href="#路径补全" class="headerlink" title="路径补全"></a>路径补全</h4><p> 根据给定的起始路径下，以对应路径下的打头字符串来逐一匹配起始路径下的每个文件，如果唯一标识按 <code>Tab</code>则自动补全，如果不唯一，则按两次 <code>Tab</code> 键能显示所有打头列表</p><h4 id="命令行展开"><a href="#命令行展开" class="headerlink" title="命令行展开"></a>命令行展开</h4><p><code>~</code>，自动展开位用户的家目录，或指定的用户的家目录，<code>&#123;&#125;</code>，可承载一个逗号分隔的路径列表，并能够将其展开位多个路径，如：<code>/tmp/&#123;a,b&#125;</code> 相当于 <code>/tmp/a /tmp/b</code></p><h4 id="命令行状态结果"><a href="#命令行状态结果" class="headerlink" title="命令行状态结果"></a>命令行状态结果</h4><p>bash 通过状态返回值来输出此结果，命令执行完成之后，其返回值保存于 bash 的特殊变量 <code>$?</code> 中，命令正确执行时，有的返回有命令返回值，不同命令，结果各不相同，<code>$COMMAND</code>，引用命令的执行结果</p><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>强引用：<code>&#39;&#39;</code>，弱引用：<code>&quot;&quot;</code>，命令引用：``</p><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><p><code>Ctrl+a</code>：跳转至命令行行首</p><p><code>Ctrl+e</code>：跳转至命令行行尾</p><p><code>Ctrl+u</code>：删除行首至光标所在处之间的所有字符</p><p><code>Ctrl+k</code>：删除光标所在处至行尾的所有字符</p><p><code>Ctrl+l</code>：清屏，相当于 <code>clear</code></p><h3 id="目录管理命令"><a href="#目录管理命令" class="headerlink" title="目录管理命令"></a>目录管理命令</h3><h4 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建目录，mkdir [OPTION]... DIRECTORY...</span><br><span class="hljs-comment"># -p，自动按需创建父目录</span><br><span class="hljs-comment"># -v，verbose，显示详细过程</span><br><span class="hljs-comment"># -m MODE，创建目录时直接给定权限</span><br><br><span class="hljs-comment"># 创建/tmp/x/y/z，并显示创建详情</span><br>[root@localhost ~]<span class="hljs-comment"># mkdir -p -v /tmp/x/y/z</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y/z&quot;</span><br><br><span class="hljs-comment"># 利用bash命令行展开特性，一条语句创建/tmp/x/y1, /tmp/x/y2, /tmp/x/y1/a, /tmp/x/y1/b</span><br>[root@localhost ~]<span class="hljs-comment"># mkdir -p -v /tmp/x/&#123;y1/&#123;a,b&#125;,y2&#125;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y1&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y1/a&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y1/b&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;/tmp/x/y2&quot;</span><br><br><span class="hljs-comment"># 利用bash命令行展开特性，一条语句创建a_c, a_d, b_c, b_d</span><br>[root@localhost ~]<span class="hljs-comment"># mkdir -pv &#123;a,b&#125;_&#123;c,d&#125;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;a_c&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;a_d&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;b_c&quot;</span><br>mkdir: 已创建目录 <span class="hljs-string">&quot;b_d&quot;</span><br></code></pre></td></tr></table></figure><h4 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 只删除空文件目录，不常用，rmdir [OPTION]... DIRECTORY...</span><br><span class="hljs-comment"># -p，删除某目录之后，如果其父目录为空，则一并删除</span><br><span class="hljs-comment"># -v，显示详细过程</span><br><br><span class="hljs-comment"># 一并删除所有空目录 /tmp/x/y/z</span><br>[root@localhost ~]<span class="hljs-comment"># rmdir -pv /tmp/x/y/z</span><br>rmdir: 正在删除目录 <span class="hljs-string">&quot;/tmp/x/y/z&quot;</span><br>rmdir: 正在删除目录 <span class="hljs-string">&quot;/tmp/x/y&quot;</span><br>rmdir: 正在删除目录 <span class="hljs-string">&quot;/tmp/x&quot;</span><br></code></pre></td></tr></table></figure><h4 id="tree"><a href="#tree" class="headerlink" title="tree"></a>tree</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 tree命令，yum install tree</span><br><span class="hljs-comment"># 显示目录层级结构，tree [options] [directory]</span><br><span class="hljs-comment"># -L，指定显示的层级</span><br></code></pre></td></tr></table></figure><h3 id="文本查看命令"><a href="#文本查看命令" class="headerlink" title="文本查看命令"></a>文本查看命令</h3><h4 id="cat-1"><a href="#cat-1" class="headerlink" title="cat"></a>cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 文件内容查看，-n显示行号，-E显示行尾结束符</span><br></code></pre></td></tr></table></figure><h4 id="tac-1"><a href="#tac-1" class="headerlink" title="tac"></a>tac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 与 cat 相反，逆行序打印文本内容</span><br></code></pre></td></tr></table></figure><h4 id="more"><a href="#more" class="headerlink" title="more"></a>more</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 分屏查看，more FILE</span><br></code></pre></td></tr></table></figure><h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 与 more 相反，less FILE</span><br></code></pre></td></tr></table></figure><h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件的前 n 行，默认 10 行，head [options] FILE</span><br>[root@localhost ~]<span class="hljs-comment"># head -n 5 /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br>TYPE=<span class="hljs-string">&quot;Ethernet&quot;</span><br>PROXY_METHOD=<span class="hljs-string">&quot;none&quot;</span><br>BROWSER_ONLY=<span class="hljs-string">&quot;no&quot;</span><br>BOOTPROTO=<span class="hljs-string">&quot;dhcp&quot;</span><br>DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br></code></pre></td></tr></table></figure><h4 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件的后 n 行，tail [options] FILE</span><br>[root@localhost ~]<span class="hljs-comment"># tail -n 5 /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br>IPV6_ADDR_GEN_MODE=<span class="hljs-string">&quot;stable-privacy&quot;</span><br>NAME=<span class="hljs-string">&quot;ens33&quot;</span><br>UUID=<span class="hljs-string">&quot;6ae13078-476b-45b6-a9d9-1fac0480b8a5&quot;</span><br>DEVICE=<span class="hljs-string">&quot;ens33&quot;</span><br>ONBOOT=<span class="hljs-string">&quot;yes&quot;</span><br><br><span class="hljs-comment"># -f，查看文件尾部内容结束后不退出，跟随显示新增的行，监控log</span><br></code></pre></td></tr></table></figure><h4 id="stat"><a href="#stat" class="headerlink" title="stat"></a>stat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># display file or file system status，stat FILE...</span><br>[root@localhost ~]<span class="hljs-comment"># stat /tmp/yum.log </span><br>  文件：<span class="hljs-string">&quot;/tmp/yum.log&quot;</span><br>  大小：0         块：0          IO 块：4096   普通空文件<br>设备：fd00h/64768dInode：67160137    硬链接：1<br>权限：(0600/-rw-------)  Uid：(    0/    root)   Gid：(    0/    root)<br>环境：system_u:object_r:initrc_tmp_t:s0<br>最近访问：2021-01-18 11:17:06.195300428 +0800<br>最近更改：2021-01-18 11:17:06.195300428 +0800<br>最近改动：2021-01-18 11:17:06.195300428 +0800<br>创建时间：-<br><br><span class="hljs-comment"># 最近访问：access time</span><br><span class="hljs-comment"># 最近更改：modify time</span><br><span class="hljs-comment"># 最近改动：change time</span><br></code></pre></td></tr></table></figure><h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># change file timestamps,touch [OPTION]... FILE...</span><br><span class="hljs-comment"># -c，指定的文件路径不存在时不予创建</span><br><span class="hljs-comment"># -a：仅修改access time</span><br><span class="hljs-comment"># -m：仅修改吗，modify time</span><br><span class="hljs-comment"># -t STAMP：指定时间戳，[[CC]YY]MMDDhhmm[.ss]</span><br></code></pre></td></tr></table></figure><h3 id="文件管理命令"><a href="#文件管理命令" class="headerlink" title="文件管理命令"></a>文件管理命令</h3><h4 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># copy files and directories，</span><br><span class="hljs-comment"># 单源复制：cp [OPTION]... [-T] SOURCE DEST</span><br> <br><br><span class="hljs-comment"># 多源复制：cp [OPTION]... SOURCE... DIRECTORY，cp [OPTION]... -t DIRECTORY SOURCE...</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完美校园健康打卡云函数版</title>
    <link href="/2021/01/17/17wanxiaoCheckin-SCF/"/>
    <url>/2021/01/17/17wanxiaoCheckin-SCF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>基于腾讯云函数的完美校园打卡，支持多人打卡，支持打卡字段信息展示，支持微信推送，每天早上六点自动打卡，理论上所有学校通用！！</p><a id="more"></a></blockquote><div class="note note-success">            <p>项目地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">https://github.com/ReaJason/17wanxiaoCheckin-Actions</a></p>          </div><div class="note note-success">            <p>云函数版 2020年2月2日 23:41:56 测试成功</p>          </div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于 GitHub Actions 暂无法与完美校园交换密钥，可能完美校园把 GitHub Actions 的 IP 给 ban 了（猜测），暂时给出一个腾讯云函数版的解决方案，其余方案还有：服务器、<a href="https://blog.imyan.ren/posts/eb6032e9/">coding</a>、手机（Tasker），以及其他可自动化运行python脚本的办法皆可！</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ol><li>已有腾讯云账号（没有，可以注册）</li><li>腾讯云已实名（觉得实名有困难，不建议用）</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1、进入控制台"><a href="#1、进入控制台" class="headerlink" title="1、进入控制台"></a>1、进入控制台</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%BF%9B%E5%85%A5%E6%8E%A7%E5%88%B6%E5%8F%B0.png" alt="进入控制台.png"></p><h3 id="2、进入云函数"><a href="#2、进入云函数" class="headerlink" title="2、进入云函数"></a>2、进入云函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%90%9C%E7%B4%A2%E4%BA%91%E5%87%BD%E6%95%B0.png" alt="进入云函数.png"></p><h3 id="3、新建云函数"><a href="#3、新建云函数" class="headerlink" title="3、新建云函数"></a>3、新建云函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E9%80%89%E6%8B%A9%E5%9C%B0%E5%8C%BA.png" alt="新建云函数.png"></p><h3 id="4、上传代码"><a href="#4、上传代码" class="headerlink" title="4、上传代码"></a>4、上传代码</h3><p>在此下载 ，<a href="https://lingsiki.lanzous.com/b0ekc7p9i">https://lingsiki.lanzous.com/b0ekc7p9i</a> 密码：7dwe</p><p>同时请下载，RegisterDeviceID.zip 下来，后续获取 ID 需要。如若软件打不开，可自行下载模拟器，短信登陆完美校园之后，在模拟器设置中复制 IMEI（即为 DEVICEID 字段）</p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%96%B0%E5%BB%BA%E5%87%BD%E6%95%B0.png" alt="上传代码.png"></p><h3 id="5、触发器配置"><a href="#5、触发器配置" class="headerlink" title="5、触发器配置"></a>5、触发器配置</h3><p>配置时间可具体参考，它下面的 <a href="https://cloud.tencent.com/document/product/583/9708">链接</a></p><p>每日 6 点打卡：<code>0 0 6 * * * *</code></p><p>每日 6、12、17点打卡：<code>0 0 6,12,17 * * * *</code></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%AE%BE%E7%BD%AE%E8%A7%A6%E5%8F%91%E5%99%A8.png" alt="设置触发器.png"></p><h3 id="6、添加环境变量"><a href="#6、添加环境变量" class="headerlink" title="6、添加环境变量"></a>6、添加环境变量</h3><ul><li>设置 900 秒（<strong>重点</strong>），因为 3 秒太短啦！</li><li>可选参数，刚接触的朋友我强烈建议使用 QQ 邮箱的推送方式，因为推送消息最全面！</li><li>如果无误再转 Qmsg 酱（可选），Server酱云函数好像被 ban 了</li><li>USERNAME 字段（必填）：手机号1,手机号2,……（与下面密码对应），例如：<code>1737782***,13602***</code></li><li>PASSWORD 字段（必填）：密码1,密码2,……  （与上面账号对应），例如：<code>123456,456789</code></li><li>DEVICEID 字段（必填）：设备id1,设备id2….（与上面账号对应），例如：<code>1232,12312</code>，没有请下载 RegisterDeviceID 获取</li><li>SCKEY 字段（可选）：用来开启 Server 酱推送服务，填写一个即可，没有请前往 <a href="https://sc.ftqq.com/3.version">Server酱</a> 注册获取</li><li>KEY 字段（可选）：用来开启 Qmsg 酱推送服务，填写一个即可，没有请前往 <a href="https://qmsg.zendee.cn/index.html">Qmsg酱</a> 注册获取</li><li>SEND_EMAIL 字段（可选）：用来开启 QQ邮箱推送服务，QQ邮箱地址</li><li>SEND_PWD 字段（可选）：用来开启 QQ邮箱推送服务，QQ邮箱授权码，<strong>不是 QQ 密码</strong></li><li>RECEIVE_EMAIL 字段（可选）：用来开启 QQ邮箱推送服务，接收邮箱地址，理论上什么邮箱都可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="编辑环境变量.png"></p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="设置环境变量.png"></p><h3 id="7、部署测试"><a href="#7、部署测试" class="headerlink" title="7、部署测试"></a>7、部署测试</h3><p>每一次修改代码之后，一定要点一下测试（自动部署），或者部署代码才能生效<br><strong>查看推送情况，确认是否成功</strong>，（检查打卡 json 字段中的 areaStr 是否为自己所在地址，如果不在，请一定要修改代码，因为打卡的地址不对可不行；如果 json 字段中还有其他字段，如 deptid，stuNo 等等为 null 或者不对，请务必修改代码，如果 Message 有值为 None（QQ 邮箱推送打卡表格数据），请一定要修改代码，因为该值无法自动填写）如果你显示打卡成功或打卡频繁，且推送的 Message 中没有 None 值，即为成功，<strong>至此每日六点多将会自行打卡</strong>，<strong>修改代码方法在原仓库 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki">wiki</a> 中</strong>，有问题提 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/issues">issue</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%B5%8B%E8%AF%95.png" alt="测试.png"></p><h3 id="8、如果有什么报错或者其他问题，请前往-这里-自行解决"><a href="#8、如果有什么报错或者其他问题，请前往-这里-自行解决" class="headerlink" title="8、如果有什么报错或者其他问题，请前往 这里 自行解决"></a>8、如果有什么报错或者其他问题，请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki">这里</a> 自行解决</h3><h3 id="9、如果这篇教程有帮到你，或者仓库代码有帮到你，可以赞赏一杯奶茶，谢谢你的光顾！"><a href="#9、如果这篇教程有帮到你，或者仓库代码有帮到你，可以赞赏一杯奶茶，谢谢你的光顾！" class="headerlink" title="9、如果这篇教程有帮到你，或者仓库代码有帮到你，可以赞赏一杯奶茶，谢谢你的光顾！"></a>9、如果这篇教程有帮到你，或者仓库代码有帮到你，可以赞赏一杯奶茶，谢谢你的光顾！</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E6%94%AF%E4%BB%98%E5%AE%9D.jpg"></div><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/%E5%BE%AE%E4%BF%A1.png"></div></div></div>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我脑子里面到底在想什么</title>
    <link href="/2021/01/14/WhatIWant/"/>
    <url>/2021/01/14/WhatIWant/</url>
    
    <content type="html"><![CDATA[<blockquote><p>真的有点受够了，做这不是做那也不是，想学这个也想学那个，这个做一点那个也做一点，心里没有目标，对未来也没有打算，苟且偷生的生活真不是我想要的，我也想成为大佬，我也想好好钻研知识，但是心里没个目标，好难行动啊。</p><a id="more"></a></blockquote><h2 id="我做了些什么"><a href="#我做了些什么" class="headerlink" title="我做了些什么"></a>我做了些什么</h2>]]></content>
    
    
    <categories>
      
      <category>Other</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Thinking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微博超话工具</title>
    <link href="/2020/10/19/WeiBoSuperTopicsTool/"/>
    <url>/2020/10/19/WeiBoSuperTopicsTool/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我的第一个 PyQt5 的 GUI 程序，抓取微博 API  进行的封装集一键超话签到，获取每日积分<br>微博 APP 登录积分，帖子评论转发，超话打榜，积分查询于一体的微博超话工具<br>本工具使用的微博 API 接口分享 —&gt; <a href="https://github.com/ReaJason/WeiBo_SuperTopics">https://github.com/ReaJason/WeiBo_SuperTopics</a></p><a id="more"></a></blockquote><div class="note note-danger">            <p>由于登录接口失效，暂无法使用，请使用  <a href="https://github.com/ReaJason/WBTopicCheckTool">https://github.com/ReaJason/WBTopicCheckTool</a></p>          </div><h3 id="一、基本功能"><a href="#一、基本功能" class="headerlink" title="一、基本功能"></a>一、基本功能</h3><ol><li>微博账号登录，验证码自动识别</li><li>关注超话签到 +16 分 +6 点以后签到随机积分</li><li>每日积分获取 +3/+5/+8</li><li>微博超话 APP 登录积分 +10 分</li><li>超话帖子评论转发点赞 +16 分</li><li>任务中心查询积分</li><li>超话打榜</li><li>一言欣赏</li></ol><h3 id="二、界面截图"><a href="#二、界面截图" class="headerlink" title="二、界面截图"></a>二、界面截图</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://img.shields.io/badge/python-3.7.4-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/pyinstaller-4.0-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/PyQt5-5.15.1-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/requests-2.24.0-brightgreen?style=social&logo=appveyor"></div><div class="group-image-wrap"><img src="https://img.shields.io/badge/torch-1.0.1-brightgreen?style=social&logo=appveyor"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/%E6%97%A0PyTorch%E7%89%88%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="无 PyTorch 版登录界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">1、无 PyTorch 版登录界面</p></center><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/PyTorch%E7%89%88%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="PyTorch 版登录界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">2、PyTorch 版登录界面</p></center><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/%E8%BF%90%E8%A1%8C%E7%95%8C%E9%9D%A2.png" alt="运行界面"></p><center><p style="color:orange; font-size: 14px; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">3、运行界面</p></center><h3 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h3><ol><li><p>花了点时间做了两个版本，第一次打包分享，请在网络环境良好的情况下运行本程序：</p><ul><li>无 PyTorch 版：<ul><li>基于 Win7 32 位操作系统打包，除了 xp 应该都可以运行</li><li>手动输入验证码，由于没有集成 pytorch，程序体积小，启动快</li><li>下载地址：<ul><li><del><a href="https://pan.baidu.com/s/1sBs48GbNM7tzgOiGjvhy1Q">https://pan.baidu.com/s/1sBs48GbNM7tzgOiGjvhy1Q</a> 提取码: 1111</del></li><li><del><a href="https://cloud.189.cn/t/r2YvqmEziqy2">https://cloud.189.cn/t/r2YvqmEziqy2</a> 提取码：sk1z</del></li><li><del><a href="https://lingsiki.lanzous.com/i08NFhka96h">https://lingsiki.lanzous.com/i08NFhka96h</a> 提取码:1111</del></li></ul></li><li>使用方法：<ul><li>解压打开exe文件</li><li>输入账号密码，点击验证，输入验证码登录</li><li>登录成功，等待获取超话列表，全选（可随意选择功能），选择打榜超话（可选），开始</li></ul></li></ul></li><li>PyTorch 版：<ul><li>基于 Win10 64 位打包，32 位的操作系统应该用不了</li><li>自动输入验证码，优点就是不需要手动输，缺点就体积大，启动略慢</li><li>下载地址：<ul><li><del><a href="https://pan.baidu.com/s/1TNQdRz_4wVpdVGBXTa3bgA">https://pan.baidu.com/s/1TNQdRz_4wVpdVGBXTa3bgA</a> 提取码: 1111</del></li><li><del><a href="https://cloud.189.cn/t/iAzQbaRzmaIj">https://cloud.189.cn/t/iAzQbaRzmaIj</a> 提取码：kr0g</del></li></ul></li><li>使用方法：<ul><li>解压打开exe文件（启动有点慢，耐心等待）</li><li>输入账号密码点击登录</li><li>登录成功，等待获取超话列表，全选（可随意选择功能），选择打榜超话（可选），开始</li></ul></li></ul></li></ul></li><li><p>PyTorch 版接入了 <a href="https://github.com/skygongque/captcha-weibo">微博验证码识别</a> 的所用到的深度学习 Pytorch 包（90+ M，最新的版本达到了几百兆），因此打包的程序体积也无可避免的变大，考虑过服务器架设打码服务，不过本地更安全（我也没钱买服务器😛）。</p></li><li><p>超话打榜功能开始前请选择打榜超话和分数后再开始。</p><ul><li>select1 对应 1 分</li><li>select10 对应 10 分</li><li>select66 对应 66 分</li><li>select256 对应全部积分</li></ul></li><li><p>如果因未知原因造成软件闪退请及时反馈或重启程序再试：</p><ul><li>反馈格式：「操作系统」+「闪退前使用的功能选项」+「闪退前运行日志的截图」。</li><li>有不错的建议也可以提出来（比如 UI ）</li><li>反馈请发邮箱或在 GitHub 提 issue：<ul><li>Email：<a href="mailto:&#x72;&#101;&#97;&#x6a;&#x61;&#115;&#111;&#110;&#x40;&#49;&#54;&#x33;&#46;&#x63;&#x6f;&#x6d;">&#x72;&#101;&#97;&#x6a;&#x61;&#115;&#111;&#110;&#x40;&#49;&#54;&#x33;&#46;&#x63;&#x6f;&#x6d;</a></li><li>GitHub：<a href="https://github.com/ReaJason/WeiBo_SuperTopics">https://github.com/ReaJason/WeiBo_SuperTopics</a></li></ul></li></ul></li><li><p>关于登录之后保存按钮，只是为了下次启动自动输入（也可以自己修改），会在程序运行的路径下保存账号和密码的明文（介意勿用）。</p></li><li><p>由于微博的一些沙雕检测，请不要一台设备登录太多账号，可能会出现异常的情况，比如无法签到，无法发微博，甚至冻结的情况</p></li></ol><h3 id="四、免责声明"><a href="#四、免责声明" class="headerlink" title="四、免责声明"></a>四、免责声明</h3><ol><li>本程序只供参考学习，请勿用于违法用途</li><li>使用本程序导致微博账号异常或冻结甚至封禁都与作者无关</li><li>凡以任何方式下载使用本程序者，视为自愿接受本声明约束。</li></ol><h3 id="五、参考项目"><a href="#五、参考项目" class="headerlink" title="五、参考项目"></a>五、参考项目</h3><ol><li><a href="https://github.com/skygongque/captcha-weibo">https://github.com/skygongque/captcha-weibo</a></li><li><a href="https://github.com/wxy1343/weibo_points">https://github.com/wxy1343/weibo_points</a></li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.zh-CN.md">中文文案指北</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PyQt5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完美校园健康打卡</title>
    <link href="/2020/06/28/17wanxiaoCheckin/"/>
    <url>/2020/06/28/17wanxiaoCheckin/</url>
    
    <content type="html"><![CDATA[<blockquote><p>基于GitHub Actions的完美校园打卡，支持多人打卡，支持打卡字段信息展示，支持微信推送，每天早上六点自动打卡，理论上所有学校通用！！</p><a id="more"></a></blockquote><div class="note note-danger">            <p>目前脚本已失效！！</p>          </div><div class="note note-success">            <p>项目地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">https://github.com/ReaJason/17wanxiaoCheckin-Actions</a></p>          </div><div class="note note-success">            <p>之前的抓包部署教程请前往：<a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/blob/master/README_LAST.md">完美校园抓包打卡</a>，你可以在这里学习模拟器抓包APP签到请求哦。</p>          </div><h2 id="一、功能介绍"><a href="#一、功能介绍" class="headerlink" title="一、功能介绍"></a>一、功能介绍</h2><ol><li>完美校园模拟登录获取 token</li><li>自动获取上次提交的打卡数据</li><li>自动化任务分三次运行（ps：没有校内打卡就不会校内打卡，没有晚上打卡也不会晚上打卡的）<ul><li><code>上午六点</code>：健康打卡，上午校内打卡；</li><li><code>中午十二点</code>：健康打卡，下午校内打卡；</li><li><code>下午五点</code>：健康打卡，晚上校内打卡；</li></ul></li><li>微信推送打卡消息</li></ol><h2 id="二、打卡数据"><a href="#二、打卡数据" class="headerlink" title="二、打卡数据"></a>二、打卡数据</h2><p>细心的你应该会发现，自从第一次打卡之后，每次进去信息基本自动填写好了，我抓取的就是这个接口，这样子也相当于大家不用抓包了，如果你进入完美校园健康打卡界面，它没有自动填写信息，可能本项目也就不起作用了，可以试试打一次卡然后再进入看有无自动填充信息。</p><h3 id="1、获取上次打卡信息"><a href="#1、获取上次打卡信息" class="headerlink" title="1、获取上次打卡信息"></a>1、获取上次打卡信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_post_json</span>(<span class="hljs-params">jsons</span>):</span><br>    retry = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> retry &lt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">try</span>:<br>            res = requests.post(url=<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=jsons, timeout=<span class="hljs-number">10</span>).json()<br>            <span class="hljs-comment"># print(res)</span><br>        <span class="hljs-keyword">except</span> BaseException:<br>            retry += <span class="hljs-number">1</span><br>            logging.warning(<span class="hljs-string">&#x27;获取完美校园打卡post参数失败，正在重试...&#x27;</span>)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            <span class="hljs-comment"># logging.warning(res)</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        data = json.loads(res[<span class="hljs-string">&#x27;data&#x27;</span>])<br>        post_dict = &#123;<br>            <span class="hljs-string">&quot;areaStr&quot;</span>: data[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>            <span class="hljs-string">&quot;deptStr&quot;</span>: data[<span class="hljs-string">&#x27;deptStr&#x27;</span>],<br>            <span class="hljs-string">&quot;deptid&quot;</span>: data[<span class="hljs-string">&#x27;deptStr&#x27;</span>][<span class="hljs-string">&#x27;deptid&#x27;</span>],<br>            <span class="hljs-string">&quot;customerid&quot;</span>: data[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>            <span class="hljs-string">&quot;userid&quot;</span>: data[<span class="hljs-string">&#x27;userid&#x27;</span>],<br>            <span class="hljs-string">&quot;username&quot;</span>: data[<span class="hljs-string">&#x27;username&#x27;</span>],<br>            <span class="hljs-string">&quot;stuNo&quot;</span>: data[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>            <span class="hljs-string">&quot;phonenum&quot;</span>: data[<span class="hljs-string">&#x27;phonenum&#x27;</span>],<br>            <span class="hljs-string">&quot;templateid&quot;</span>: data[<span class="hljs-string">&#x27;templateid&#x27;</span>],<br>            <span class="hljs-string">&quot;updatainfo&quot;</span>: [&#123;<span class="hljs-string">&quot;propertyname&quot;</span>: i[<span class="hljs-string">&quot;propertyname&quot;</span>], <span class="hljs-string">&quot;value&quot;</span>: i[<span class="hljs-string">&quot;value&quot;</span>]&#125; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span><br>                           data[<span class="hljs-string">&#x27;cusTemplateRelations&#x27;</span>]],<br>            <span class="hljs-string">&quot;checkbox&quot;</span>: [&#123;<span class="hljs-string">&quot;description&quot;</span>: i[<span class="hljs-string">&quot;decription&quot;</span>], <span class="hljs-string">&quot;value&quot;</span>: i[<span class="hljs-string">&quot;value&quot;</span>]&#125; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span><br>                         data[<span class="hljs-string">&#x27;cusTemplateRelations&#x27;</span>]],<br>        &#125;<br>        <span class="hljs-comment"># print(json.dumps(post_dict, sort_keys=True, indent=4, ensure_ascii=False))</span><br>        logging.info(<span class="hljs-string">&#x27;获取完美校园打卡post参数成功&#x27;</span>)<br>        <span class="hljs-keyword">return</span> post_dict<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-comment"># 用来获取健康打卡打卡数据的json字段</span><br>json1 = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>,<br>             <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;templateid&quot;</span>: <span class="hljs-string">&quot;pneumonia&quot;</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>             <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;userComeApp&quot;</span>&#125;<br>post_dict = get_post_json(json1)<br><br><span class="hljs-comment"># 用来获取校内打卡打卡数据的json字段</span><br>json2 = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>,<br>         <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;templateid&quot;</span>: id_list[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;customerAppTypeRuleId&quot;</span>: id_list[<span class="hljs-string">&#x27;id&#x27;</span>],<br>                      <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                      <span class="hljs-string">&quot;token&quot;</span>: token&#125;, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;userComeAppSchool&quot;</span>,<br>         <span class="hljs-string">&quot;token&quot;</span>: token&#125;<br>campus_dict = get_post_json(json2)<br></code></pre></td></tr></table></figure><h3 id="2、获取本校校内打卡模板id"><a href="#2、获取本校校内打卡模板id" class="headerlink" title="2、获取本校校内打卡模板id"></a>2、获取本校校内打卡模板id</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_custom_id</span>(<span class="hljs-params">token</span>):</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;appClassify&quot;</span>: <span class="hljs-string">&quot;DK&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token<br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/clock/school/getUserInfo&quot;</span>, data=data)<br>        <span class="hljs-comment"># print(res.text)</span><br>        custom = res.json()[<span class="hljs-string">&#x27;userInfo&#x27;</span>].get(<span class="hljs-string">&#x27;customerAppTypeId&#x27;</span>)<br>        <span class="hljs-keyword">if</span> custom:<br>            <span class="hljs-keyword">return</span> custom<br>        <span class="hljs-keyword">return</span> res.json()[<span class="hljs-string">&#x27;userInfo&#x27;</span>].get(<span class="hljs-string">&#x27;customerId&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br></code></pre></td></tr></table></figure><h3 id="3、获取本校校内打卡id"><a href="#3、获取本校校内打卡id" class="headerlink" title="3、获取本校校内打卡id"></a>3、获取本校校内打卡id</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_id_list</span>(<span class="hljs-params">token, custom_id</span>):</span><br>    post_data = &#123;<br>        <span class="hljs-string">&quot;customerAppTypeId&quot;</span>: custom_id,<br>        <span class="hljs-string">&quot;longitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;latitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token<br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/clock/school/rules&quot;</span>, data=post_data)<br>        <span class="hljs-comment"># print(res.text)</span><br>        <span class="hljs-keyword">return</span> res.json()[<span class="hljs-string">&#x27;customerAppTypeDto&#x27;</span>][<span class="hljs-string">&#x27;ruleList&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><h3 id="4、健康打卡"><a href="#4、健康打卡" class="headerlink" title="4、健康打卡"></a>4、健康打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">healthy_check_in</span>(<span class="hljs-params">username, token, post_dict</span>):</span><br>    check_json = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;submitUpInfo&quot;</span>,<br>                  <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;deptStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptStr&#x27;</span>], <span class="hljs-string">&quot;areaStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;reportdate&quot;</span>: round(time.time() * <span class="hljs-number">1000</span>), <span class="hljs-string">&quot;customerid&quot;</span>: post_dict[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>                               <span class="hljs-string">&quot;deptid&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptid&#x27;</span>], <span class="hljs-string">&quot;source&quot;</span>: <span class="hljs-string">&quot;app&quot;</span>,<br>                               <span class="hljs-string">&quot;templateid&quot;</span>: post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                               <span class="hljs-string">&quot;username&quot;</span>: post_dict[<span class="hljs-string">&#x27;username&#x27;</span>], <span class="hljs-string">&quot;phonenum&quot;</span>: username,<br>                               <span class="hljs-string">&quot;userid&quot;</span>: post_dict[<span class="hljs-string">&#x27;userid&#x27;</span>], <span class="hljs-string">&quot;updatainfo&quot;</span>: post_dict[<span class="hljs-string">&#x27;updatainfo&#x27;</span>],<br>                               <span class="hljs-string">&quot;gpsType&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>                  &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=check_json).json()<br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;校内打卡请求出错&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h3 id="5、校内打卡"><a href="#5、校内打卡" class="headerlink" title="5、校内打卡"></a>5、校内打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">campus_check_in</span>(<span class="hljs-params">username, token, post_dict, id</span>):</span><br>    check_json = &#123;<span class="hljs-string">&quot;businessType&quot;</span>: <span class="hljs-string">&quot;epmpics&quot;</span>, <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;submitUpInfoSchool&quot;</span>,<br>                  <span class="hljs-string">&quot;jsonData&quot;</span>: &#123;<span class="hljs-string">&quot;deptStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;areaStr&quot;</span>: post_dict[<span class="hljs-string">&#x27;areaStr&#x27;</span>],<br>                               <span class="hljs-string">&quot;reportdate&quot;</span>: round(time.time() * <span class="hljs-number">1000</span>), <span class="hljs-string">&quot;customerid&quot;</span>: post_dict[<span class="hljs-string">&#x27;customerid&#x27;</span>],<br>                               <span class="hljs-string">&quot;deptid&quot;</span>: post_dict[<span class="hljs-string">&#x27;deptid&#x27;</span>], <span class="hljs-string">&quot;source&quot;</span>: <span class="hljs-string">&quot;app&quot;</span>,<br>                               <span class="hljs-string">&quot;templateid&quot;</span>: post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>], <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>                               <span class="hljs-string">&quot;username&quot;</span>: post_dict[<span class="hljs-string">&#x27;username&#x27;</span>], <span class="hljs-string">&quot;phonenum&quot;</span>: username,<br>                               <span class="hljs-string">&quot;userid&quot;</span>: post_dict[<span class="hljs-string">&#x27;userid&#x27;</span>], <span class="hljs-string">&quot;updatainfo&quot;</span>: post_dict[<span class="hljs-string">&#x27;updatainfo&#x27;</span>],<br>                               <span class="hljs-string">&quot;customerAppTypeRuleId&quot;</span>: id, <span class="hljs-string">&quot;clockState&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;,<br>                  <span class="hljs-string">&quot;token&quot;</span>: token<br>                  &#125;<br>    <span class="hljs-comment"># print(check_json)</span><br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/sass/api/epmpics&quot;</span>, json=check_json).json()<br><br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] != <span class="hljs-string">&#x27;10000&#x27;</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>])<br>        <span class="hljs-keyword">else</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=post_dict[<span class="hljs-string">&#x27;templateid&#x27;</span>])<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```校内打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;校内打卡请求出错&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h3 id="6、获取第二类健康打卡的信息"><a href="#6、获取第二类健康打卡的信息" class="headerlink" title="6、获取第二类健康打卡的信息"></a>6、获取第二类健康打卡的信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_recall_data</span>(<span class="hljs-params">token</span>):</span><br>    retry = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> retry &lt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">try</span>:<br>            res = requests.post(url=<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/reported/recall&quot;</span>, data=&#123;<span class="hljs-string">&quot;token&quot;</span>: token&#125;, timeout=<span class="hljs-number">10</span>).json()<br>        <span class="hljs-keyword">except</span> BaseException:<br>            retry += <span class="hljs-number">1</span><br>            logging.warning(<span class="hljs-string">&#x27;获取完美校园打卡post参数失败，正在重试...&#x27;</span>)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">0</span>:<br>            logging.info(<span class="hljs-string">&#x27;获取完美校园打卡post参数成功&#x27;</span>)<br>            <span class="hljs-keyword">return</span> res[<span class="hljs-string">&#x27;data&#x27;</span>]<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><h3 id="7、第二类健康打卡"><a href="#7、第二类健康打卡" class="headerlink" title="7、第二类健康打卡"></a>7、第二类健康打卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">receive_check_in</span>(<span class="hljs-params">token, custom_id, post_dict</span>):</span><br>    check_json = &#123;<br>        <span class="hljs-string">&quot;userId&quot;</span>: post_dict[<span class="hljs-string">&#x27;userId&#x27;</span>],<br>        <span class="hljs-string">&quot;name&quot;</span>: post_dict[<span class="hljs-string">&#x27;name&#x27;</span>],<br>        <span class="hljs-string">&quot;stuNo&quot;</span>: post_dict[<span class="hljs-string">&#x27;stuNo&#x27;</span>],<br>        <span class="hljs-string">&quot;whereabouts&quot;</span>: post_dict[<span class="hljs-string">&#x27;whereabouts&#x27;</span>],<br>        <span class="hljs-string">&quot;familyWhereabouts&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;beenToWuhan&quot;</span>: post_dict[<span class="hljs-string">&#x27;beenToWuhan&#x27;</span>],<br>        <span class="hljs-string">&quot;contactWithPatients&quot;</span>: post_dict[<span class="hljs-string">&#x27;contactWithPatients&#x27;</span>],<br>        <span class="hljs-string">&quot;symptom&quot;</span>: post_dict[<span class="hljs-string">&#x27;symptom&#x27;</span>],<br>        <span class="hljs-string">&quot;fever&quot;</span>: post_dict[<span class="hljs-string">&#x27;fever&#x27;</span>],<br>        <span class="hljs-string">&quot;cough&quot;</span>: post_dict[<span class="hljs-string">&#x27;cough&#x27;</span>],<br>        <span class="hljs-string">&quot;soreThroat&quot;</span>: post_dict[<span class="hljs-string">&#x27;soreThroat&#x27;</span>],<br>        <span class="hljs-string">&quot;debilitation&quot;</span>: post_dict[<span class="hljs-string">&#x27;debilitation&#x27;</span>],<br>        <span class="hljs-string">&quot;diarrhea&quot;</span>: post_dict[<span class="hljs-string">&#x27;diarrhea&#x27;</span>],<br>        <span class="hljs-string">&quot;cold&quot;</span>: post_dict[<span class="hljs-string">&#x27;cold&#x27;</span>],<br>        <span class="hljs-string">&quot;staySchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;staySchool&#x27;</span>],<br>        <span class="hljs-string">&quot;contacts&quot;</span>: post_dict[<span class="hljs-string">&#x27;contacts&#x27;</span>],<br>        <span class="hljs-string">&quot;emergencyPhone&quot;</span>: post_dict[<span class="hljs-string">&#x27;emergencyPhone&#x27;</span>],<br>        <span class="hljs-string">&quot;address&quot;</span>: post_dict[<span class="hljs-string">&#x27;address&#x27;</span>],<br>        <span class="hljs-string">&quot;familyForAddress&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;collegeId&quot;</span>: post_dict[<span class="hljs-string">&#x27;collegeId&#x27;</span>],<br>        <span class="hljs-string">&quot;majorId&quot;</span>: post_dict[<span class="hljs-string">&#x27;majorId&#x27;</span>],<br>        <span class="hljs-string">&quot;classId&quot;</span>: post_dict[<span class="hljs-string">&#x27;classId&#x27;</span>],<br>        <span class="hljs-string">&quot;classDescribe&quot;</span>: post_dict[<span class="hljs-string">&#x27;classDescribe&#x27;</span>],<br>        <span class="hljs-string">&quot;temperature&quot;</span>: post_dict[<span class="hljs-string">&#x27;temperature&#x27;</span>],<br>        <span class="hljs-string">&quot;confirmed&quot;</span>: post_dict[<span class="hljs-string">&#x27;confirmed&#x27;</span>],<br>        <span class="hljs-string">&quot;isolated&quot;</span>: post_dict[<span class="hljs-string">&#x27;isolated&#x27;</span>],<br>        <span class="hljs-string">&quot;passingWuhan&quot;</span>: post_dict[<span class="hljs-string">&#x27;passingWuhan&#x27;</span>],<br>        <span class="hljs-string">&quot;passingHubei&quot;</span>: post_dict[<span class="hljs-string">&#x27;passingHubei&#x27;</span>],<br>        <span class="hljs-string">&quot;patientSide&quot;</span>: post_dict[<span class="hljs-string">&#x27;patientSide&#x27;</span>],<br>        <span class="hljs-string">&quot;patientContact&quot;</span>: post_dict[<span class="hljs-string">&#x27;patientContact&#x27;</span>],<br>        <span class="hljs-string">&quot;mentalHealth&quot;</span>: post_dict[<span class="hljs-string">&#x27;mentalHealth&#x27;</span>],<br>        <span class="hljs-string">&quot;wayToSchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;wayToSchool&#x27;</span>],<br>        <span class="hljs-string">&quot;backToSchool&quot;</span>: post_dict[<span class="hljs-string">&#x27;backToSchool&#x27;</span>],<br>        <span class="hljs-string">&quot;haveBroadband&quot;</span>: post_dict[<span class="hljs-string">&#x27;haveBroadband&#x27;</span>],<br>        <span class="hljs-string">&quot;emergencyContactName&quot;</span>: post_dict[<span class="hljs-string">&#x27;emergencyContactName&#x27;</span>],<br>        <span class="hljs-string">&quot;helpInfo&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;passingCity&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;longitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;latitude&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>: token,<br>    &#125;<br>    headers = &#123;<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">f&#x27;https://reportedh5.17wanxiao.com/nCovReport/index.html?token=<span class="hljs-subst">&#123;token&#125;</span>&amp;customerId=<span class="hljs-subst">&#123;custom_id&#125;</span>&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.post(<span class="hljs-string">&quot;https://reportedh5.17wanxiao.com/api/reported/receive&quot;</span>, headers=headers, data=check_json).json()<br>        <span class="hljs-comment"># 以json格式打印json字符串</span><br>        <span class="hljs-comment"># print(res)</span><br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">0</span>:<br>            logging.info(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            logging.warning(res)<br>            <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">1</span>, res=res, post_dict=post_dict, check_json=check_json, type=<span class="hljs-string">&#x27;healthy&#x27;</span>)<br>    <span class="hljs-keyword">except</span> BaseException:<br>        errmsg = <span class="hljs-string">f&quot;```打卡请求出错```&quot;</span><br>        logging.warning(<span class="hljs-string">&#x27;打卡请求出错，网络不稳定&#x27;</span>)<br>        <span class="hljs-keyword">return</span> dict(status=<span class="hljs-number">0</span>, errmsg=errmsg)<br></code></pre></td></tr></table></figure><h2 id="三、使用方法（也可使用-腾讯云函数版-）"><a href="#三、使用方法（也可使用-腾讯云函数版-）" class="headerlink" title="三、使用方法（也可使用 腾讯云函数版 ）"></a>三、使用方法（也可使用 <a href="https://reajason.top/2021/01/17/17wanxiaoCheckin-SCF/">腾讯云函数版</a> ）</h2><ol><li><p>请先确保在<strong>完美校园 APP</strong>中进入健康打卡界面，信息能够正确的自动填写，并手动打一次卡（只能是 app，小程序不行！）（没有自动填写的项，可以自行修改代码）</p></li><li><p>点击右上角的 <code>fork</code>，<code>fork</code> 本项目到自己仓库中</p></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/click_fork.png"></p><ol start="3"><li>开启 <code>Actions</code></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/start_action.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_actions.png"></p><ol start="4"><li><p>设置三个 <code>secrets</code>  字段：<code>USERNAME</code>、<code>PASSWORD</code>、<code>SCKEY</code>（对应就是账号，密码以及 Server 酱）</p><ol><li>如果是多人打卡的话：<ul><li>USERNAME字段：手机号1,手机号2,……（与下面密码对应），例如：<code>1737782***,13602***</code></li><li>PASSWORD字段：密码1,密码2,……  （与上面账号对应），例如：<code>123456,456789</code></li><li>SCKEY字段：填写一个即可，例如：<code>SCU90543*******</code>，没有请前往 <a href="https://sc.ftqq.com/3.version">Server酱</a> 注册获取</li></ul></li></ol></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/new_secrets.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/secrets_details.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_secrets.png"></p><ol start="5"><li>修改 <code>README.md</code> 选第一个就好，不要选第二个Create a new branch***（为什么教着做都不听话，泪目），测试一次</li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/modify_readme.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_modify.png"></p><ol start="6"><li>查看 <code>Actions</code> 运行情况，以及微信推送情况，<strong>至此每日六点多将会自行打卡</strong></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/check_status.png"></p><p>   <img src="https://cdn.jsdelivr.net/gh/ReaJason/17wanxiaoCheckin-Actions/Pictures/end_check.png"></p><h2 id="四、Q-amp-A"><a href="#四、Q-amp-A" class="headerlink" title="四、Q&amp;A"></a>四、Q&amp;A</h2><h3 id="1、fork之后，修改README-md并没有触发actions？"><a href="#1、fork之后，修改README-md并没有触发actions？" class="headerlink" title="1、fork之后，修改README.md并没有触发actions？"></a>1、fork之后，修改README.md并没有触发actions？</h3><p>请进入 Actions，Enable workflow</p><p><img src="https://cdn.jsdelivr.net/gh/LingSiKi/images/img/enable.png" alt="enable"></p><h3 id="2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？"><a href="#2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？" class="headerlink" title="2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？"></a>2、我们学校要求打卡的时间不一样，这个自动运行的时间该怎么修改？</h3><p>进入 <code>.github/workflows/run.yml </code>修改时间，请不要搁那掐着秒算程序运行，你设置好了，明天就一定能好好运行，Giuhub Actions大概会有10~20分钟的延迟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">这里的cron就是脚本运行时间，22,4,9对应的时间是UTC时，对应北京时间早上六点，中午十二点，下午五点</span><br><span class="hljs-string">详细对应关系请查看：http://timebie.com/cn/universalbeijing.php</span><br><span class="hljs-string"></span><br><span class="hljs-string">只有健康打卡的小伙伴可以只留着22就可以了，这样其余两个时间就不会打卡</span><br><span class="hljs-string">如果害怕程序报错导致上午健康打卡没打，可设置6点和7点各运行一次即：0 22,23 * * *</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>on:<br>  push:<br>    branches: [ master ]<br>  pull_request:<br>    branches: [ master ]<br>  schedule:<br>    - cron: <span class="hljs-number">0</span> <span class="hljs-number">22</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span> * * *<br></code></pre></td></tr></table></figure><h3 id="3、程序报错显示密码错误，还有-次机会？"><a href="#3、程序报错显示密码错误，还有-次机会？" class="headerlink" title="3、程序报错显示密码错误，还有 * 次机会？"></a>3、程序报错显示密码错误，还有 * 次机会？</h3><p>请立马修改 secrets 的密码再尝试运行</p><h3 id="4、健康打卡问题汇总请前往-wiki"><a href="#4、健康打卡问题汇总请前往-wiki" class="headerlink" title="4、健康打卡问题汇总请前往 wiki"></a>4、健康打卡问题汇总请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki#%E5%81%A5%E5%BA%B7%E6%89%93%E5%8D%A1%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB">wiki</a></h3><h3 id="5、校内打卡问题汇总请前往-wiki"><a href="#5、校内打卡问题汇总请前往-wiki" class="headerlink" title="5、校内打卡问题汇总请前往 wiki"></a>5、校内打卡问题汇总请前往 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions/wiki#%E6%A0%A1%E5%86%85%E6%89%93%E5%8D%A1%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB">wiki</a></h3>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
